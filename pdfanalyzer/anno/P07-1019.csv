Title	Forest Rescoring: Faster Decoding with Integrated Language Models ∗	page=0 xpos=0 ypos=0 single-column left-indent right-indent font-largest page-top headchar-capital column-bottom above-blank-line above-double-space above-line-space
Author	Liang Huang	page=0 xpos=2 ypos=0 left-column left-indent right-indent font-larger column-top line-blank-line line-double-space line-space headchar-capital
B-Affiliation	University of Pennsylvania	page=0 xpos=1 ypos=0 left-column left-indent right-indent font-larger hanged-line longer-tail headchar-capital
Address	Philadelphia, PA 19104	page=0 xpos=1 ypos=1 left-column left-indent right-indent font-larger indented-line shorter-tail year headchar-capital
Email	lhuang3@cis.upenn.edu	page=0 xpos=1 ypos=1 left-column left-indent right-indent font-smaller hanged-line longer-tail symbol-atmark headchar-lower above-blank-line above-double-space above-line-space
AbstractHeader	Abstract	page=0 xpos=1 ypos=2 left-column centered left-indent right-indent font-larger indented-line shorter-tail line-blank-line line-double-space line-space string-abstract headchar-capital above-double-space above-line-space
B-Abstract	Efficient decoding has been a fundamental	page=0 xpos=0 ypos=2 left-column centered left-indent right-indent hanged-line longer-tail line-double-space line-space headchar-capital
I-Abstract	problem in machine translation, especially	page=0 xpos=0 ypos=2 left-column centered left-indent right-indent aligned-line headchar-lower
I-Abstract	with an integrated language model which	page=0 xpos=0 ypos=3 left-column centered left-indent right-indent aligned-line headchar-lower
I-Abstract	is essential for achieving good translation	page=0 xpos=0 ypos=3 left-column centered left-indent right-indent aligned-line headchar-lower
I-Abstract	quality. We develop faster approaches for	page=0 xpos=0 ypos=3 left-column centered left-indent right-indent aligned-line headchar-lower
I-Abstract	this problem based on k-best parsing algo-	page=0 xpos=0 ypos=3 left-column centered left-indent right-indent font-larger aligned-line headchar-lower tailchar-hiphen
I-Abstract	rithms and demonstrate their effectiveness	page=0 xpos=0 ypos=3 left-column centered left-indent right-indent aligned-line headchar-lower
I-Abstract	on both phrase-based and syntax-based MT	page=0 xpos=0 ypos=4 left-column centered left-indent right-indent aligned-line headchar-lower
I-Abstract	systems. In both cases, our methods achieve	page=0 xpos=0 ypos=4 left-column centered left-indent right-indent aligned-line headchar-lower
I-Abstract	significant speed improvements, often by	page=0 xpos=0 ypos=4 left-column centered left-indent right-indent aligned-line headchar-lower
I-Abstract	more than a factor of ten, over the conven-	page=0 xpos=0 ypos=4 left-column centered left-indent right-indent aligned-line headchar-lower tailchar-hiphen
I-Abstract	tional beam-search method at the same lev-	page=0 xpos=0 ypos=4 left-column centered left-indent right-indent aligned-line headchar-lower tailchar-hiphen
I-Abstract	els of search error and translation accuracy.	page=0 xpos=0 ypos=5 left-column left-indent right-indent aligned-line shorter-tail headchar-lower tailchar-period above-double-space above-line-space
B-SectionHeader	1 Introduction	page=0 xpos=0 ypos=5 left-column right-indent font-larger hanged-line shorter-tail line-double-space line-space numbered-heading1 above-double-space above-line-space
B-Body	Recent efforts in statistical machine translation	page=0 xpos=0 ypos=5 left-column full-justified aligned-line longer-tail line-double-space line-space headchar-capital
I-Body	(MT) have seen promising improvements in out-	page=0 xpos=0 ypos=5 left-column full-justified aligned-line tailchar-hiphen
I-Body	put quality, especially the phrase-based models (Och	page=0 xpos=0 ypos=6 left-column full-justified aligned-line headchar-lower
I-Body	and Ney, 2004) and syntax-based models (Chiang,	page=0 xpos=0 ypos=6 left-column full-justified aligned-line year headchar-lower tailchar-comma
I-Body	2005; Galley et al., 2006). However, efficient de-	page=0 xpos=0 ypos=6 left-column full-justified aligned-line year tailchar-hiphen
I-Body	coding under these paradigms, especially with inte-	page=0 xpos=0 ypos=6 left-column full-justified aligned-line headchar-lower tailchar-hiphen
I-Body	grated language models (LMs), remains a difficult	page=0 xpos=0 ypos=6 left-column full-justified aligned-line headchar-lower
I-Body	problem. Part of the complexity arises from the ex-	page=0 xpos=0 ypos=7 left-column full-justified aligned-line headchar-lower tailchar-hiphen
I-Body	pressive power of the translation model: for exam-	page=0 xpos=0 ypos=7 left-column full-justified aligned-line headchar-lower tailchar-hiphen
I-Body	ple, a phrase- or word-based model with full reorder-	page=0 xpos=0 ypos=7 left-column full-justified aligned-line headchar-lower tailchar-hiphen
I-Body	ing has exponential complexity (Knight, 1999). The	page=0 xpos=0 ypos=7 left-column full-justified aligned-line year headchar-lower
I-Body	language model also, if fully integrated into the de-	page=0 xpos=0 ypos=7 left-column full-justified aligned-line headchar-lower tailchar-hiphen
I-Body	coder, introduces an expensive overhead for main-	page=0 xpos=0 ypos=8 left-column full-justified aligned-line headchar-lower tailchar-hiphen
I-Body	taining target-language boundary words for dynamic	page=0 xpos=0 ypos=8 left-column full-justified aligned-line headchar-lower above-double-space above-line-space
B-Footnote	<sup>∗</sup> The authors would like to thank Dan Gildea, Jonathan	page=0 xpos=0 ypos=8 left-column left-indent font-larger indented-line line-double-space line-space headchar-super
I-Footnote	Graehl, Mark Johnson, Kevin Knight, Daniel Marcu, Bob	page=0 xpos=0 ypos=8 left-column full-justified font-smallest hanged-line headchar-capital
I-Footnote	Moore and Hao Zhang. L. H. was partially supported by	page=0 xpos=0 ypos=8 left-column full-justified font-smallest aligned-line headchar-capital
I-Footnote	NSF ITR grants IIS-0428020 while visiting USC/ISI and EIA-	page=0 xpos=0 ypos=9 left-column full-justified font-smallest aligned-line headchar-capital tailchar-hiphen
I-Footnote	0205456 at UPenn. D. C. was partially supported under the	page=0 xpos=0 ypos=9 left-column full-justified font-smallest aligned-line year
I-Footnote	GALE/DARPA program, contract HR0011-06-C-0022.	page=0 xpos=0 ypos=9 left-column right-indent font-smallest aligned-line shorter-tail headchar-capital tailchar-period above-line-space
Page	144	page=0 xpos=4 ypos=9 left-column left-indent right-over indented-line longer-tail line-space numeric-only column-bottom
Author	David Chiang	page=0 xpos=6 ypos=0 right-column left-indent right-indent font-larger column-top headchar-capital
B-Affiliation	USC Information Sciences Institute	page=0 xpos=5 ypos=0 right-column left-indent right-indent font-larger hanged-line longer-tail headchar-capital
Address	Marina del Rey, CA 90292	page=0 xpos=5 ypos=1 right-column left-indent right-indent font-larger indented-line shorter-tail headchar-capital
Email	chiang@isi.edu	page=0 xpos=6 ypos=1 right-column left-indent right-indent font-smaller indented-line shorter-tail symbol-atmark headchar-lower above-blank-line above-double-space above-line-space
I-Body	programming (Wu, 1996; Och and Ney, 2004). In	page=0 xpos=5 ypos=2 right-column full-justified hanged-line longer-tail line-blank-line line-double-space line-space year headchar-lower
I-Body	practice, one must prune the search space aggres-	page=0 xpos=5 ypos=2 right-column full-justified aligned-line headchar-lower tailchar-hiphen
E-Body	sively to reduce it to a reasonable size.	page=0 xpos=5 ypos=2 right-column right-indent aligned-line shorter-tail headchar-lower tailchar-period
B-Body	A much simpler alternative method to incorporate	page=0 xpos=5 ypos=2 right-column left-indent indented-line longer-tail headchar-capital
I-Body	the LM is rescoring: we first decode without the LM	page=0 xpos=5 ypos=3 right-column full-justified hanged-line headchar-lower
I-Body	(henceforth −LM decoding) to produce a k-best list	page=0 xpos=5 ypos=3 right-column full-justified font-largest aligned-line
I-Body	of candidate translations, and then rerank the k-best	page=0 xpos=5 ypos=3 right-column full-justified font-larger aligned-line headchar-lower
I-Body	list using the LM. This method runs much faster in	page=0 xpos=5 ypos=3 right-column full-justified aligned-line headchar-lower
I-Body	practice but often produces a considerable number	page=0 xpos=5 ypos=3 right-column full-justified aligned-line headchar-lower
I-Body	of search errors since the true best translation (taking	page=0 xpos=5 ypos=4 right-column full-justified aligned-line headchar-lower
E-Body	LM into account) is often outside of the k-best list.	page=0 xpos=5 ypos=4 right-column right-indent font-larger aligned-line shorter-tail headchar-capital tailchar-period
B-Body	Cube pruning (Chiang, 2007) is a compromise be-	page=0 xpos=5 ypos=4 right-column left-indent indented-line longer-tail year headchar-capital tailchar-hiphen
I-Body	tween rescoring and full-integration: it rescores k	page=0 xpos=5 ypos=4 right-column full-justified font-larger hanged-line headchar-lower
I-Body	subtranslations at each node of the forest, rather than	page=0 xpos=5 ypos=4 right-column full-justified aligned-line headchar-lower
I-Body	only at the root node as in pure rescoring. By adapt-	page=0 xpos=5 ypos=5 right-column full-justified aligned-line headchar-lower tailchar-hiphen
I-Body	ing the k-best parsing Algorithm 2 of Huang and	page=0 xpos=5 ypos=5 right-column full-justified font-larger aligned-line headchar-lower
I-Body	Chiang (2005), it achieves significant speed-up over	page=0 xpos=5 ypos=5 right-column full-justified aligned-line year headchar-capital
E-Body	full-integration on Chiang’s Hiero system.	page=0 xpos=5 ypos=5 right-column right-indent aligned-line shorter-tail headchar-lower tailchar-period
B-Body	We push the idea behind this method further and	page=0 xpos=5 ypos=5 right-column left-indent indented-line longer-tail headchar-capital
I-Body	make the following contributions in this paper:	page=0 xpos=5 ypos=6 right-column right-indent hanged-line shorter-tail headchar-lower tailchar-colon above-double-space above-line-space
B-Listitem	• We generalize cube pruning and adapt it to two	page=0 xpos=5 ypos=6 right-column left-indent font-largest indented-line longer-tail line-double-space line-space itemization
I-Listitem	systems very different from Hiero: a phrase-	page=0 xpos=5 ypos=6 right-column left-indent indented-line headchar-lower tailchar-hiphen
I-Listitem	based system similar to Pharaoh (Koehn, 2004)	page=0 xpos=5 ypos=6 right-column left-indent aligned-line year headchar-lower
I-Listitem	and a tree-to-string system (Huang et al., 2006).	page=0 xpos=5 ypos=7 right-column left-indent aligned-line year headchar-lower tailchar-period above-double-space above-line-space
B-Listitem	• We also devise a faster variant of cube pruning,	page=0 xpos=5 ypos=7 right-column left-indent font-largest hanged-line line-double-space line-space itemization tailchar-comma
I-Listitem	called cube growing, which uses a lazy version	page=0 xpos=5 ypos=7 right-column left-indent indented-line headchar-lower
I-Listitem	of k-best parsing (Huang and Chiang, 2005)	page=0 xpos=5 ypos=7 right-column left-indent font-larger aligned-line year headchar-lower
I-Listitem	that tries to reduce k to the minimum needed	page=0 xpos=5 ypos=8 right-column left-indent font-larger aligned-line headchar-lower
I-Listitem	at each node to obtain the desired number of	page=0 xpos=5 ypos=8 right-column left-indent aligned-line headchar-lower
I-Listitem	hypotheses at the root.	page=0 xpos=5 ypos=8 right-column left-indent right-indent aligned-line shorter-tail headchar-lower tailchar-period above-double-space above-line-space
B-Body	Cube pruning and cube growing are collectively	page=0 xpos=5 ypos=8 right-column left-indent hanged-line longer-tail line-double-space line-space headchar-capital
I-Body	called forest rescoring since they both approxi-	page=0 xpos=5 ypos=8 right-column full-justified hanged-line headchar-lower tailchar-hiphen
I-Body	mately rescore the packed forest of derivations from	page=0 xpos=5 ypos=9 right-column full-justified aligned-line headchar-lower
I-Body	−LM decoding. In practice they run an order of	page=0 xpos=5 ypos=9 right-column full-justified font-largest aligned-line column-bottom above-blank-line above-double-space above-line-space
B-Footer	Proceedings of the 45th Annual Meeting of the Association of Computational Linguistics, pages 144–151,	page=0 xpos=0 ypos=9 single-column left-indent right-indent font-smallest column-top line-blank-line line-double-space line-space headchar-capital tailchar-comma
I-Footer	Prague, Czech Republic, June 2007.  2007 c Association for Computational Linguistics	page=0 xpos=1 ypos=9 single-column left-indent right-indent font-smallest indented-line shorter-tail year headchar-capital page-bottom
I-Body	magnitude faster than full-integration with beam	page=1 xpos=0 ypos=0 left-column full-justified page-top headchar-lower
I-Body	search, at the same level of search errors and trans-	page=1 xpos=0 ypos=0 left-column full-justified aligned-line headchar-lower tailchar-hiphen
E-Body	lation accuracy as measured by BLEU.	page=1 xpos=0 ypos=0 left-column right-indent aligned-line shorter-tail headchar-lower tailchar-period above-double-space above-line-space
B-SectionHeader	2 Preliminaries	page=1 xpos=0 ypos=0 left-column right-indent font-larger aligned-line shorter-tail line-double-space line-space numbered-heading1 above-double-space above-line-space
B-Body	We establish in this section a unified framework	page=1 xpos=0 ypos=1 left-column full-justified aligned-line longer-tail line-double-space line-space headchar-capital
I-Body	for translation with an integrated n-gram language	page=1 xpos=0 ypos=1 left-column full-justified font-larger aligned-line headchar-lower
I-Body	model in both phrase-based systems and syntax-	page=1 xpos=0 ypos=1 left-column full-justified aligned-line headchar-lower tailchar-hiphen
I-Body	based systems based on synchronous context-free	page=1 xpos=0 ypos=1 left-column full-justified aligned-line headchar-lower
I-Body	grammars (SCFGs). An SCFG (Lewis and Stearns,	page=1 xpos=0 ypos=1 left-column full-justified aligned-line headchar-lower tailchar-comma
I-Body	1968) is a context-free rewriting system for generat-	page=1 xpos=0 ypos=2 left-column full-justified aligned-line year tailchar-hiphen
I-Body	ing string pairs. Each rule A → α, β rewrites a pair	page=1 xpos=0 ypos=2 left-column full-justified font-largest aligned-line headchar-lower
I-Body	of nonterminals in both languages, where α and β	page=1 xpos=0 ypos=2 left-column full-justified font-larger aligned-line headchar-lower
I-Body	are the source and target side components, and there	page=1 xpos=0 ypos=2 left-column full-justified aligned-line headchar-lower
I-Body	is a one-to-one correspondence between the nonter-	page=1 xpos=0 ypos=2 left-column full-justified aligned-line headchar-lower tailchar-hiphen
I-Body	minal occurrences in α and the nonterminal occur-	page=1 xpos=0 ypos=3 left-column full-justified font-larger aligned-line headchar-lower tailchar-hiphen
I-Body	rences in β. For example, the following rule	page=1 xpos=0 ypos=3 left-column right-indent font-larger aligned-line shorter-tail headchar-lower above-double-space above-line-space
B-Equation	VP → PP <sup>(1)</sup> VP (2) , VP (2) PP (1)	page=1 xpos=0 ypos=3 left-column left-indent right-indent font-largest indented-line longer-tail line-double-space line-space headchar-capital above-double-space above-line-space
I-Body	captures the swapping of VP and PP between Chi-	page=1 xpos=0 ypos=4 left-column full-justified hanged-line longer-tail line-double-space line-space headchar-lower tailchar-hiphen
E-Body	nese (source) and English (target).	page=1 xpos=0 ypos=4 left-column right-indent aligned-line shorter-tail headchar-lower tailchar-period above-double-space above-line-space
B-SubsectionHeader	2.1 Translation as Deduction	page=1 xpos=0 ypos=4 left-column right-indent aligned-line shorter-tail line-double-space line-space numbered-heading2 above-double-space above-line-space
B-Body	We will use the following example from Chinese to	page=1 xpos=0 ypos=4 left-column full-justified aligned-line longer-tail line-double-space line-space headchar-capital
I-Body	English for both systems described in this section:	page=1 xpos=0 ypos=5 left-column right-indent aligned-line shorter-tail headchar-capital tailchar-colon above-double-space above-line-space
B-Quote	yǔ Shālóng jǔxı́ng le huı̀tán	page=1 xpos=0 ypos=5 left-column left-indent right-indent indented-line shorter-tail line-double-space line-space headchar-lower
I-Quote	with Sharon hold [past] meeting	page=1 xpos=0 ypos=5 left-column left-indent right-indent aligned-line longer-tail headchar-lower above-double-space above-line-space
I-Quote	‘held a meeting with Sharon’	page=1 xpos=0 ypos=5 left-column left-indent right-indent aligned-line shorter-tail line-double-space line-space above-double-space above-line-space
B-Body	A typical phrase-based decoder generates partial	page=1 xpos=0 ypos=6 left-column left-indent hanged-line longer-tail line-double-space line-space headchar-capital
I-Body	target-language outputs in left-to-right order in the	page=1 xpos=0 ypos=6 left-column full-justified hanged-line headchar-lower
I-Body	form of hypotheses (Koehn, 2004). Each hypothesis	page=1 xpos=0 ypos=6 left-column full-justified aligned-line year headchar-lower
I-Body	has a coverage vector capturing the source-language	page=1 xpos=0 ypos=6 left-column full-justified aligned-line headchar-lower
I-Body	words translated so far, and can be extended into a	page=1 xpos=0 ypos=7 left-column full-justified aligned-line headchar-lower
I-Body	longer hypothesis by a phrase-pair translating an un-	page=1 xpos=0 ypos=7 left-column full-justified aligned-line headchar-lower tailchar-hiphen
E-Body	covered segment.	page=1 xpos=0 ypos=7 left-column right-indent aligned-line shorter-tail headchar-lower tailchar-period
B-Body	This process can be formalized as a deduc-	page=1 xpos=0 ypos=7 left-column left-indent indented-line longer-tail headchar-capital tailchar-hiphen
I-Body	tive system. For example, the following deduc-	page=1 xpos=0 ypos=7 left-column full-justified hanged-line headchar-lower tailchar-hiphen
I-Body	tion step grows a hypothesis by the phrase-pair	page=1 xpos=0 ypos=8 left-column full-justified aligned-line headchar-lower
I-Body	hyǔ Shālóng, with Sharoni:	page=1 xpos=0 ypos=8 left-column right-indent font-largest aligned-line shorter-tail headchar-lower tailchar-colon above-double-space above-line-space
B-Equation	( •••) : (w, “held a talk”)	page=1 xpos=1 ypos=8 left-column left-indent right-indent font-largest indented-line longer-tail line-double-space line-space
I-Equation	(•••••) : (w + c, “held a talk with Sharon”) (1)	page=1 xpos=0 ypos=8 left-column left-indent font-largest hanged-line longer-tail above-double-space above-line-space
I-Body	where a • in the coverage vector indicates the source	page=1 xpos=0 ypos=9 left-column full-justified font-largest hanged-line line-double-space line-space headchar-lower
I-Body	word at this position is “covered” (for simplicity	page=1 xpos=0 ypos=9 left-column full-justified aligned-line headchar-lower
I-Body	we omit here the ending position of the last phrase	page=1 xpos=0 ypos=9 left-column full-justified aligned-line headchar-lower above-line-space
Page	145	page=1 xpos=4 ypos=9 left-column left-indent right-over indented-line longer-tail line-space numeric-only column-bottom
I-Body	which is needed for distortion costs), and where w	page=1 xpos=5 ypos=0 right-column full-justified font-larger column-top headchar-lower
I-Body	and w + c are the weights of the two hypotheses,	page=1 xpos=5 ypos=0 right-column full-justified font-largest aligned-line headchar-lower tailchar-comma
E-Body	respectively, with c being the cost of the phrase-pair.	page=1 xpos=5 ypos=0 right-column full-justified font-larger aligned-line headchar-lower tailchar-period
B-Body	Similarly, the decoding problem with SCFGs can	page=1 xpos=5 ypos=0 right-column left-indent indented-line headchar-capital
I-Body	also be cast as a deductive (parsing) system (Shieber	page=1 xpos=5 ypos=0 right-column full-justified hanged-line headchar-lower
I-Body	et al., 1995). Basically, we parse the input string us-	page=1 xpos=5 ypos=1 right-column full-justified aligned-line year headchar-lower tailchar-hiphen
I-Body	ing the source projection of the SCFG while build-	page=1 xpos=5 ypos=1 right-column full-justified aligned-line headchar-lower tailchar-hiphen
I-Body	ing the corresponding subtranslations in parallel. A	page=1 xpos=5 ypos=1 right-column full-justified aligned-line headchar-lower
I-Body	possible deduction of the above example is notated:	page=1 xpos=5 ypos=1 right-column right-indent aligned-line headchar-lower tailchar-colon above-line-space
B-Equation	(PP <sub>1,3</sub> ) : (w 1 , t 1 ) (VP 3,6 ) : (w 2 , t 2 )	page=1 xpos=5 ypos=1 right-column centered left-indent right-indent font-largest indented-line shorter-tail line-space
I-Equation	(VP <sub>1,6</sub> ) : (w 1 + w 2 + c <sup>′</sup> , t 2 t 1 ) (2)	page=1 xpos=6 ypos=2 right-column left-indent font-largest indented-line longer-tail above-double-space above-line-space
I-Body	where the subscripts denote indices in the input sen-	page=1 xpos=5 ypos=2 right-column full-justified hanged-line line-double-space line-space headchar-lower tailchar-hiphen
I-Body	tence just as in CKY parsing, w 1 , w 2 are the scores	page=1 xpos=5 ypos=2 right-column full-justified font-largest aligned-line headchar-lower
I-Body	of the two antecedent items, and t 1 and t 2 are the	page=1 xpos=5 ypos=2 right-column full-justified font-largest aligned-line headchar-lower
I-Body	corresponding subtranslations. The resulting trans-	page=1 xpos=5 ypos=3 right-column full-justified aligned-line headchar-lower tailchar-hiphen
I-Body	lation t 2 t 1 is the inverted concatenation as specified	page=1 xpos=5 ypos=3 right-column full-justified font-largest aligned-line headchar-lower
I-Body	by the target-side of the SCFG rule with the addi-	page=1 xpos=5 ypos=3 right-column full-justified aligned-line headchar-lower tailchar-hiphen
E-Body	tional cost c <sup>′</sup> being the cost of this rule.	page=1 xpos=5 ypos=3 right-column right-indent font-largest aligned-line shorter-tail headchar-lower tailchar-period
B-Body	These two deductive systems represent the search	page=1 xpos=5 ypos=3 right-column left-indent indented-line longer-tail headchar-capital
I-Body	space of decoding without a language model. When	page=1 xpos=5 ypos=4 right-column full-justified hanged-line headchar-lower
I-Body	one is instantiated for a particular input string, it de-	page=1 xpos=5 ypos=4 right-column full-justified aligned-line headchar-lower tailchar-hiphen
I-Body	fines a set of derivations, called a forest, represented	page=1 xpos=5 ypos=4 right-column full-justified aligned-line headchar-lower
I-Body	in a compact structure that has a structure of a graph	page=1 xpos=5 ypos=4 right-column full-justified aligned-line headchar-lower
I-Body	in the phrase-based case, or more generally, a hyper-	page=1 xpos=5 ypos=4 right-column full-justified aligned-line headchar-lower tailchar-hiphen
I-Body	graph in both cases. Accordingly we call items like	page=1 xpos=5 ypos=5 right-column full-justified aligned-line headchar-lower
I-Body	(•••••) and (VP <sub>1,6</sub> ) nodes in the forest, and instan-	page=1 xpos=5 ypos=5 right-column full-justified font-largest aligned-line tailchar-hiphen
I-Body	tiated deductions like	page=1 xpos=5 ypos=5 right-column right-indent aligned-line shorter-tail headchar-lower above-double-space above-line-space
B-Equation	(•••••) → ( •••) with Sharon,	page=1 xpos=5 ypos=5 right-column left-indent right-indent font-largest indented-line longer-tail line-double-space line-space tailchar-comma above-line-space
I-Equation	(VP <sub>1,6</sub> ) → (VP 3,6 ) (PP 1,3 )	page=1 xpos=5 ypos=6 right-column left-indent right-indent font-largest shorter-tail line-space above-double-space above-line-space
I-Body	we call hyperedges that connect one or more an-	page=1 xpos=5 ypos=6 right-column full-justified hanged-line longer-tail line-double-space line-space headchar-lower tailchar-hiphen
E-Body	tecedent nodes to a consequent node.	page=1 xpos=5 ypos=6 right-column right-indent aligned-line shorter-tail headchar-lower tailchar-period above-double-space above-line-space
B-SubsectionHeader	2.2 Adding a Language Model	page=1 xpos=5 ypos=6 right-column right-indent aligned-line shorter-tail line-double-space line-space numbered-heading2 above-double-space above-line-space
B-Body	To integrate with a bigram language model, we can	page=1 xpos=5 ypos=7 right-column full-justified aligned-line longer-tail line-double-space line-space headchar-capital
I-Body	use the dynamic-programming algorithms of Och	page=1 xpos=5 ypos=7 right-column full-justified aligned-line headchar-lower
I-Body	and Ney (2004) and Wu (1996) for phrase-based	page=1 xpos=5 ypos=7 right-column full-justified aligned-line year headchar-lower
I-Body	and SCFG-based systems, respectively, which we	page=1 xpos=5 ypos=7 right-column full-justified aligned-line headchar-lower
I-Body	may think of as doing a finer-grained version of the	page=1 xpos=5 ypos=7 right-column full-justified aligned-line headchar-lower
I-Body	deductions above. Each node v in the forest will	page=1 xpos=5 ypos=8 right-column full-justified font-larger aligned-line headchar-lower
I-Body	be split into a set of augmented items, which we	page=1 xpos=5 ypos=8 right-column full-justified aligned-line headchar-lower
I-Body	call +LM items. For phrase-based decoding, a +LM	page=1 xpos=5 ypos=8 right-column full-justified font-largest aligned-line headchar-lower
I-Body	item has the form (v a ) where a is the last word	page=1 xpos=5 ypos=8 right-column full-justified font-largest aligned-line headchar-lower
I-Body	of the hypothesis. Thus a +LM version of Deduc-	page=1 xpos=5 ypos=8 right-column full-justified font-largest aligned-line headchar-lower tailchar-hiphen
I-Body	tion (1) might be:	page=1 xpos=5 ypos=9 right-column right-indent aligned-line shorter-tail headchar-lower tailchar-colon above-line-space
B-Equation	( ••• <sup>talk</sup> ) : (w, “held a talk”)	page=1 xpos=6 ypos=9 right-column centered left-indent right-indent font-largest indented-line longer-tail line-space
I-Equation	(••••• <sup>Sharon</sup> ) : (w ′ , “held a talk with Sharon”)	page=1 xpos=5 ypos=9 right-column centered left-indent right-indent font-largest hanged-line longer-tail page-bottom
Figure	__Figure 1__	page=2 xpos=0 ypos=-3 single-column left-indent right-over box page-top figure-area above-double-space above-line-space
B-Caption	Figure 1: Cube pruning along one hyperedge. (a): the numbers in the grid denote the score of the resulting	page=2 xpos=0 ypos=0 single-column full-justified hanged-line shorter-tail line-double-space line-space string-figure headchar-capital
I-Caption	+LM item, including the combination cost; (b)-(d): the best-first enumeration of the top three items. Notice	page=2 xpos=0 ypos=0 single-column full-justified font-largest aligned-line
E-Caption	that the items popped in (b) and (c) are out of order due to the non-monotonicity of the combination cost.	page=2 xpos=0 ypos=0 single-column right-indent aligned-line shorter-tail headchar-lower tailchar-period column-bottom above-blank-line above-double-space above-line-space
I-Body	where the score of the resulting +LM item	page=2 xpos=0 ypos=1 left-column right-indent font-largest column-top line-blank-line line-double-space line-space headchar-lower above-line-space
B-Equation	w <sup>′</sup> = w + c − log P <sub>lm</sub> (with | talk)	page=2 xpos=0 ypos=1 left-column centered left-indent right-indent font-largest indented-line line-space itemization headchar-lower above-double-space above-line-space
I-Body	now includes a combination cost due to the bigrams	page=2 xpos=0 ypos=1 left-column full-justified hanged-line longer-tail line-double-space line-space headchar-lower
E-Body	formed when applying the phrase-pair.	page=2 xpos=0 ypos=2 left-column right-indent aligned-line shorter-tail headchar-lower tailchar-period
B-Body	Similarly, a +LM item in SCFG-based models	page=2 xpos=0 ypos=2 left-column left-indent font-largest indented-line longer-tail headchar-capital
I-Body	has the form (v <sup>a⋆b</sup> ), where a and b are boundary	page=2 xpos=0 ypos=2 left-column full-justified font-largest hanged-line headchar-lower
I-Body	words of the hypothesis string, and ⋆ is a placeholder	page=2 xpos=0 ypos=2 left-column full-justified font-larger aligned-line headchar-lower
I-Body	symbol for an elided part of that string, indicating	page=2 xpos=0 ypos=3 left-column full-justified aligned-line headchar-lower
I-Body	that a possible translation of the part of the input	page=2 xpos=0 ypos=3 left-column full-justified aligned-line headchar-lower
I-Body	spanned by v starts with a and ends with b. An ex-	page=2 xpos=0 ypos=3 left-column full-justified font-larger aligned-line headchar-lower tailchar-hiphen
I-Body	ample +LM version of Deduction (2) is:	page=2 xpos=0 ypos=3 left-column right-indent font-largest aligned-line shorter-tail headchar-lower tailchar-colon above-line-space
B-Equation	(PP <sup>with</sup> <sub>1,3</sub> <sup>⋆</sup> Sharon ): (w 1 , t 1 ) (VP held 3,6 ⋆ talk ): (w 2 , t 2 )	page=2 xpos=0 ypos=4 left-column centered left-indent right-indent font-largest indented-line longer-tail line-space
I-Equation	(VP <sub>1,6</sub> <sup>held</sup> <sup>⋆</sup> Sharon ): (w, t 2 t 1 )	page=2 xpos=1 ypos=4 left-column centered left-indent right-indent font-largest indented-line shorter-tail above-line-space
I-Body	where w = w <sub>1</sub> + w 2 + c <sup>′</sup> − log P lm (with | talk) with	page=2 xpos=0 ypos=5 left-column full-justified font-largest hanged-line longer-tail line-space headchar-lower
I-Body	a similar combination cost formed in combining ad-	page=2 xpos=0 ypos=5 left-column full-justified aligned-line itemization headchar-lower tailchar-hiphen
I-Body	jacent boundary words of antecedents. This scheme	page=2 xpos=0 ypos=5 left-column full-justified aligned-line headchar-lower
I-Body	can be easily extended to work with a general n-	page=2 xpos=0 ypos=5 left-column full-justified font-larger aligned-line headchar-lower tailchar-hiphen
I-Body	gram model (Chiang, 2007). The experiments in this	page=2 xpos=0 ypos=6 left-column full-justified aligned-line year headchar-lower
E-Body	paper use trigram models.	page=2 xpos=0 ypos=6 left-column right-indent aligned-line shorter-tail headchar-lower tailchar-period
B-Body	The conventional full-integration approach tra-	page=2 xpos=0 ypos=6 left-column left-indent indented-line longer-tail headchar-capital tailchar-hiphen
I-Body	verses the forest bottom-up and explores all pos-	page=2 xpos=0 ypos=6 left-column full-justified hanged-line headchar-lower tailchar-hiphen
I-Body	sible +LM deductions along each hyperedge.	page=2 xpos=0 ypos=7 left-column full-justified font-largest aligned-line headchar-lower tailchar-period
I-Body	The theoretical running time of this algorithm	page=2 xpos=0 ypos=7 left-column full-justified aligned-line headchar-capital
I-Body	is O(|F ||T | <sup>(m−1)</sup> ) for phrase-based models, and	page=2 xpos=0 ypos=7 left-column full-justified font-largest aligned-line headchar-lower
I-Body	O(|F ||T | <sup>4(m−1)</sup> ) for binary-branching SCFG-based	page=2 xpos=0 ypos=7 left-column full-justified font-largest aligned-line headchar-capital
I-Body	models, where |F | is the size of the forest, and |T |	page=2 xpos=0 ypos=8 left-column full-justified font-largest aligned-line headchar-lower
I-Body	is the number of possible target-side words. Even	page=2 xpos=0 ypos=8 left-column full-justified aligned-line headchar-lower
I-Body	if we assume a constant number of translations for	page=2 xpos=0 ypos=8 left-column full-justified aligned-line headchar-lower
I-Body	each word in the input, with a trigram model, this	page=2 xpos=0 ypos=8 left-column full-justified aligned-line headchar-lower
I-Body	still amounts to O(n <sup>11</sup> ) for SCFG-based models and	page=2 xpos=0 ypos=9 left-column full-justified font-largest aligned-line headchar-lower
E-Body	O(2 <sup>n</sup> n <sup>2</sup> ) for phrase-based models.	page=2 xpos=0 ypos=9 left-column right-indent font-largest aligned-line shorter-tail headchar-capital tailchar-period above-line-space
Page	146	page=2 xpos=4 ypos=9 left-column left-indent right-over indented-line longer-tail line-space numeric-only column-bottom
B-SectionHeader	3 Cube Pruning	page=2 xpos=5 ypos=1 right-column right-indent font-larger column-top numbered-heading1 above-double-space above-line-space
B-Body	Cube pruning (Chiang, 2007) reduces the search	page=2 xpos=5 ypos=1 right-column full-justified aligned-line longer-tail line-double-space line-space year headchar-capital
I-Body	space significantly based on the observation that	page=2 xpos=5 ypos=1 right-column full-justified aligned-line headchar-lower
I-Body	when the above method is combined with beam	page=2 xpos=5 ypos=2 right-column full-justified aligned-line headchar-lower
I-Body	search, only a small fraction of the possible +LM	page=2 xpos=5 ypos=2 right-column full-justified font-largest aligned-line headchar-lower
I-Body	items at a node will escape being pruned, and more-	page=2 xpos=5 ypos=2 right-column full-justified aligned-line headchar-lower tailchar-hiphen
I-Body	over we can select with reasonable accuracy those	page=2 xpos=5 ypos=2 right-column full-justified aligned-line headchar-lower
I-Body	top-k items without computing all possible items	page=2 xpos=5 ypos=3 right-column full-justified aligned-line headchar-lower
I-Body	first. In a nutshell, cube pruning works on the −LM	page=2 xpos=5 ypos=3 right-column full-justified font-largest aligned-line headchar-lower
I-Body	forest, keeping at most k +LM items at each node,	page=2 xpos=5 ypos=3 right-column full-justified font-largest aligned-line headchar-lower tailchar-comma
I-Body	and uses the k-best parsing Algorithm 2 of Huang	page=2 xpos=5 ypos=3 right-column full-justified font-larger aligned-line headchar-lower
I-Body	and Chiang (2005) to speed up the computation.	page=2 xpos=5 ypos=4 right-column full-justified aligned-line year headchar-lower tailchar-period
I-Body	For simplicity of presentation, we will use concrete	page=2 xpos=5 ypos=4 right-column full-justified aligned-line headchar-capital
I-Body	SCFG-based examples, but the method applies to the	page=2 xpos=5 ypos=4 right-column full-justified aligned-line headchar-capital
E-Body	general hypergraph framework in Section 2.	page=2 xpos=5 ypos=5 right-column right-indent aligned-line shorter-tail headchar-lower tailchar-period
B-Body	Consider Figure 1(a). Here k = 3 and we use	page=2 xpos=5 ypos=5 right-column left-indent font-largest indented-line longer-tail headchar-capital
I-Body	D(v) to denote the top-k +LM items (in sorted or-	page=2 xpos=5 ypos=5 right-column full-justified font-largest hanged-line headchar-capital tailchar-hiphen
I-Body	der) of node v. Suppose we have computed D(u 1 )	page=2 xpos=5 ypos=5 right-column full-justified font-largest aligned-line headchar-lower
I-Body	and D(u 2 ) for the two antecedent nodes u 1 =	page=2 xpos=5 ypos=6 right-column full-justified font-largest aligned-line headchar-lower
I-Body	(VP <sub>3,6</sub> ) and u 2 = (PP 1,3 ) respectively. Then for	page=2 xpos=5 ypos=6 right-column full-justified font-largest aligned-line
I-Body	the consequent node v = (VP <sub>1,6</sub> ) we just need	page=2 xpos=5 ypos=6 right-column full-justified font-largest aligned-line headchar-lower
I-Body	to derive the top-3 from the 9 combinations of	page=2 xpos=5 ypos=6 right-column full-justified aligned-line headchar-lower
I-Body	(D <sub>i</sub> (u <sub>1</sub> ), D j (u 2 )) with i, j ∈ [1, 3]. Since the an-	page=2 xpos=5 ypos=7 right-column full-justified font-largest aligned-line tailchar-hiphen
I-Body	tecedent items are sorted, it is very likely that the	page=2 xpos=5 ypos=7 right-column full-justified aligned-line headchar-lower
I-Body	best consequent items in this grid lie towards the	page=2 xpos=5 ypos=7 right-column full-justified aligned-line headchar-lower
I-Body	upper-left corner. This situation is very similar to k-	page=2 xpos=5 ypos=7 right-column full-justified font-larger aligned-line headchar-lower tailchar-hiphen
I-Body	best parsing and we can adapt the Algorithm 2 of	page=2 xpos=5 ypos=8 right-column full-justified aligned-line headchar-lower
I-Body	Huang and Chiang (2005) here to explore this grid	page=2 xpos=5 ypos=8 right-column full-justified aligned-line year headchar-capital
E-Body	in a best-first order.	page=2 xpos=5 ypos=8 right-column right-indent aligned-line shorter-tail headchar-lower tailchar-period
B-Body	Suppose that the combination costs are negligible,	page=2 xpos=5 ypos=8 right-column left-indent indented-line longer-tail headchar-capital tailchar-comma
I-Body	and therefore the weight of a consequent item is just	page=2 xpos=5 ypos=9 right-column full-justified hanged-line headchar-lower
I-Body	the product of the weights of the antecedent items.	page=2 xpos=5 ypos=9 right-column full-justified aligned-line headchar-lower tailchar-period page-bottom
B-Figure	1: function C UBE (F ) ⊲ the input is a forest F	page=3 xpos=0 ypos=0 left-column left-indent right-indent font-smallest page-top
I-Figure	2: for v ∈ F in (bottom-up) topological order do	page=3 xpos=0 ypos=0 left-column left-indent right-indent font-smaller aligned-line shorter-tail
I-Figure	3: KB EST (v)	page=3 xpos=0 ypos=0 left-column left-indent right-indent font-smallest aligned-line shorter-tail
I-Figure	4: return D <sub>1</sub> (TOP)	page=3 xpos=0 ypos=0 left-column left-indent right-indent aligned-line longer-tail
I-Figure	5: procedure KB EST (v)	page=3 xpos=0 ypos=0 left-column left-indent right-indent font-smallest aligned-line
I-Figure	6: cand ← {he, 1i | e ∈ IN (v)} ⊲ for each incoming e	page=3 xpos=0 ypos=0 left-column left-indent font-smaller aligned-line longer-tail
I-Figure	7: H EAPIFY (cand ) ⊲ a priority queue of candidates	page=3 xpos=0 ypos=0 left-column left-indent font-smallest aligned-line
I-Figure	8: buf ← ∅	page=3 xpos=0 ypos=1 left-column left-indent right-indent font-smaller aligned-line shorter-tail
I-Figure	9: while |cand | > 0 and |buf | < k do	page=3 xpos=0 ypos=1 left-column left-indent right-indent font-smaller aligned-line longer-tail
I-Figure	10: item ← P OP -M IN (cand )	page=3 xpos=0 ypos=1 left-column right-indent font-smaller hanged-line shorter-tail
I-Figure	11: append item to buf	page=3 xpos=0 ypos=1 left-column right-indent font-smallest aligned-line shorter-tail
I-Figure	12: P USH S UCC (item, cand )	page=3 xpos=0 ypos=1 left-column right-indent font-smallest aligned-line longer-tail
I-Figure	13: sort buf to D(v)	page=3 xpos=0 ypos=1 left-column right-indent font-smallest aligned-line shorter-tail
I-Figure	14: procedure P USH S UCC (he, ji, cand )	page=3 xpos=0 ypos=2 left-column right-indent font-smallest aligned-line longer-tail
I-Figure	15: e is v → u <sub>1</sub> . . . u |e|	page=3 xpos=0 ypos=2 left-column right-indent aligned-line shorter-tail
I-Figure	16: for i in 1 . . . |e| do	page=3 xpos=0 ypos=2 left-column right-indent font-smaller aligned-line
I-Figure	17: j <sup>′</sup> ← j + b i	page=3 xpos=0 ypos=2 left-column right-indent font-larger aligned-line shorter-tail
I-Figure	18: if |D(u i )| ≥ j i <sup>′</sup> then	page=3 xpos=0 ypos=2 left-column right-indent font-larger aligned-line longer-tail
E-Figure	19: P USH (he, j <sup>′</sup> i, cand )	page=3 xpos=0 ypos=2 left-column right-indent font-larger aligned-line longer-tail above-blank-line above-double-space above-line-space
B-Caption	Figure 2: Pseudocode for cube pruning.	page=3 xpos=0 ypos=3 left-column centered left-indent right-indent indented-line longer-tail line-blank-line line-double-space line-space string-figure headchar-capital tailchar-period above-blank-line above-double-space above-line-space
I-Body	Then we know that D 1 (v) = (D 1 (u 1 ), D 1 (u 2 )),	page=3 xpos=0 ypos=3 left-column full-justified font-largest hanged-line longer-tail line-blank-line line-double-space line-space headchar-capital tailchar-comma
I-Body	the upper-left corner of the grid. Moreover, we	page=3 xpos=0 ypos=3 left-column full-justified aligned-line headchar-lower
I-Body	know that D 2 (v) is the better of (D 1 (u 1 ), D 2 (u 2 ))	page=3 xpos=0 ypos=4 left-column full-justified font-largest aligned-line headchar-lower
I-Body	and (D <sub>2</sub> (u 1 ), D 1 (u 2 )), the two neighbors of the	page=3 xpos=0 ypos=4 left-column full-justified font-largest aligned-line headchar-lower
I-Body	upper-left corner. We continue in this way (see Fig-	page=3 xpos=0 ypos=4 left-column full-justified aligned-line headchar-lower tailchar-hiphen
I-Body	ure 1(b)–(d)), enumerating the consequent items	page=3 xpos=0 ypos=4 left-column full-justified aligned-line headchar-lower
I-Body	best-first while keeping track of a relatively small	page=3 xpos=0 ypos=4 left-column full-justified aligned-line headchar-lower
I-Body	number of candidates (shaded cells in Figure 1(b),	page=3 xpos=0 ypos=5 left-column full-justified aligned-line headchar-lower tailchar-comma
E-Body	cand in Figure 2) for the next-best item.	page=3 xpos=0 ypos=5 left-column right-indent aligned-line shorter-tail headchar-lower tailchar-period
B-Body	However, when we take into account the combi-	page=3 xpos=0 ypos=5 left-column left-indent indented-line longer-tail headchar-capital tailchar-hiphen
I-Body	nation costs, this grid is no longer monotonic in gen-	page=3 xpos=0 ypos=5 left-column full-justified hanged-line headchar-lower tailchar-hiphen
I-Body	eral, and the above algorithm will not always enu-	page=3 xpos=0 ypos=6 left-column full-justified aligned-line headchar-lower tailchar-hiphen
I-Body	merate items in best-first order. We can see this in	page=3 xpos=0 ypos=6 left-column full-justified aligned-line headchar-lower
I-Body	the first iteration in Figure 1(b), where an item with	page=3 xpos=0 ypos=6 left-column full-justified aligned-line headchar-lower
I-Body	score 2.5 has been enumerated even though there is	page=3 xpos=0 ypos=6 left-column full-justified aligned-line headchar-lower
I-Body	an item with score 2.4 still to come. Thus we risk	page=3 xpos=0 ypos=6 left-column full-justified aligned-line headchar-lower
I-Body	making more search errors than the full-integration	page=3 xpos=0 ypos=7 left-column full-justified aligned-line headchar-lower
I-Body	method, but in practice the loss is much less signif-	page=3 xpos=0 ypos=7 left-column full-justified aligned-line headchar-lower tailchar-hiphen
I-Body	icant than the speedup. Because of this disordering,	page=3 xpos=0 ypos=7 left-column full-justified aligned-line headchar-lower tailchar-comma
I-Body	we do not put the enumerated items directly into	page=3 xpos=0 ypos=7 left-column full-justified aligned-line headchar-lower
I-Body	D(v); instead, we collect items in a buffer (buf in	page=3 xpos=0 ypos=7 left-column full-justified aligned-line headchar-capital
I-Body	Figure 2) and re-sort the buffer into D(v) after it has	page=3 xpos=0 ypos=8 left-column full-justified aligned-line string-figure headchar-capital
E-Body	accumulated k items. <sup>1</sup>	page=3 xpos=0 ypos=8 left-column right-indent font-largest aligned-line shorter-tail headchar-lower
B-Body	In general the grammar may have multiple rules	page=3 xpos=0 ypos=8 left-column left-indent indented-line longer-tail headchar-capital
I-Body	that share the same source side but have different	page=3 xpos=0 ypos=8 left-column full-justified hanged-line headchar-lower
I-Body	target sides, which we have treated here as separate	page=3 xpos=0 ypos=8 left-column full-justified aligned-line headchar-lower above-double-space above-line-space
B-Footnote	<sup>1</sup> Notice that different combinations might have the same re-	page=3 xpos=0 ypos=9 left-column left-indent indented-line line-double-space line-space headchar-super tailchar-hiphen
I-Footnote	sulting item, in which case we only keep the one with the better	page=3 xpos=0 ypos=9 left-column full-justified font-smallest hanged-line headchar-lower
I-Footnote	score (sometimes called hypothesis recombination in MT liter-	page=3 xpos=0 ypos=9 left-column full-justified font-smallest aligned-line headchar-lower tailchar-hiphen
I-Footnote	ature), so the number of items in D(v) might be less than k.	page=3 xpos=0 ypos=9 left-column right-indent font-smallest aligned-line shorter-tail headchar-lower tailchar-period above-line-space
Page	147	page=3 xpos=4 ypos=9 left-column left-indent right-over indented-line longer-tail line-space numeric-only column-bottom
Table	__Table 1__	page=3 xpos=5 ypos=-1 right-column centered left-indent box column-top table-area above-double-space above-line-space
B-Caption	Table 1: Comparison of the three methods.	page=3 xpos=5 ypos=1 right-column centered left-indent right-indent indented-line shorter-tail line-double-space line-space string-table headchar-capital tailchar-period above-blank-line above-double-space above-line-space
I-Body	hyperedges in the −LM forest. In Hiero, these hy-	page=3 xpos=5 ypos=1 right-column full-justified font-largest hanged-line longer-tail line-blank-line line-double-space line-space headchar-lower tailchar-hiphen
I-Body	peredges are processed as a single unit which we	page=3 xpos=5 ypos=1 right-column full-justified aligned-line headchar-lower
I-Body	call a hyperedge bundle. The different target sides	page=3 xpos=5 ypos=1 right-column full-justified aligned-line headchar-lower
I-Body	then constitute a third dimension of the grid, form-	page=3 xpos=5 ypos=2 right-column full-justified aligned-line headchar-lower tailchar-hiphen
E-Body	ing a cube of possible combinations (Chiang, 2007).	page=3 xpos=5 ypos=2 right-column full-justified aligned-line year headchar-lower tailchar-period
B-Body	Now consider that there are many hyperedges that	page=3 xpos=5 ypos=2 right-column left-indent indented-line headchar-capital
I-Body	derive v, and we are only interested the top +LM	page=3 xpos=5 ypos=2 right-column full-justified font-largest hanged-line headchar-lower
I-Body	items of v over all incoming hyperedges. Following	page=3 xpos=5 ypos=3 right-column full-justified font-larger aligned-line headchar-lower
I-Body	Algorithm 2, we initialize the priority queue cand	page=3 xpos=5 ypos=3 right-column centered right-indent aligned-line headchar-capital
I-Body	with the upper-left corner item from each hyper-	page=3 xpos=5 ypos=3 right-column full-justified aligned-line headchar-lower tailchar-hiphen
I-Body	edge, and proceed as above. See Figure 2 for the	page=3 xpos=5 ypos=3 right-column full-justified aligned-line headchar-lower
I-Body	pseudocode for cube pruning. We use the notation	page=3 xpos=5 ypos=3 right-column full-justified aligned-line headchar-lower
I-Body	he, ji to identify the derivation of v via the hyper-	page=3 xpos=5 ypos=4 right-column full-justified font-largest aligned-line headchar-lower tailchar-hiphen
I-Body	edge e and the j <sub>i</sub> th best subderivation of antecedent	page=3 xpos=5 ypos=4 right-column full-justified font-largest aligned-line headchar-lower
I-Body	u <sub>i</sub> (1 ≤ i ≤ |j|). Also, we let 1 stand for a vec-	page=3 xpos=5 ypos=4 right-column full-justified font-largest aligned-line itemization headchar-lower tailchar-hiphen
I-Body	tor whose elements are all 1, and b <sup>i</sup> for the vector	page=3 xpos=5 ypos=4 right-column full-justified font-largest aligned-line headchar-lower
I-Body	whose members are all 0 except for the ith whose	page=3 xpos=5 ypos=4 right-column full-justified font-largest aligned-line headchar-lower
I-Body	value is 1 (the dimensionality of either should be ev-	page=3 xpos=5 ypos=5 right-column full-justified font-largest aligned-line headchar-lower tailchar-hiphen
I-Body	ident from the context). The heart of the algorithm	page=3 xpos=5 ypos=5 right-column full-justified aligned-line headchar-lower
I-Body	is lines 10–12. Lines 10–11 move the best deriva-	page=3 xpos=5 ypos=5 right-column full-justified aligned-line headchar-lower tailchar-hiphen
I-Body	tion he, ji from cand to buf , and then line 12 pushes	page=3 xpos=5 ypos=5 right-column full-justified font-largest aligned-line headchar-lower
E-Body	its successors {he, j + b <sup>i</sup> i | i ∈ 1 . . . |e|} into cand .	page=3 xpos=5 ypos=5 right-column centered right-indent font-largest aligned-line headchar-lower tailchar-period above-double-space above-line-space
B-SectionHeader	4 Cube Growing	page=3 xpos=5 ypos=6 right-column right-indent font-larger aligned-line shorter-tail line-double-space line-space numbered-heading1 above-double-space above-line-space
B-Body	Although much faster than full-integration, cube	page=3 xpos=5 ypos=6 right-column full-justified aligned-line longer-tail line-double-space line-space headchar-capital
I-Body	pruning still computes a fixed amount of +LM items	page=3 xpos=5 ypos=6 right-column full-justified font-largest aligned-line headchar-lower
I-Body	at each node, many of which will not be useful for	page=3 xpos=5 ypos=6 right-column full-justified aligned-line headchar-lower
I-Body	arriving at the 1-best hypothesis at the root. It would	page=3 xpos=5 ypos=7 right-column full-justified aligned-line headchar-lower
I-Body	be more efficient to compute as few +LM items at	page=3 xpos=5 ypos=7 right-column full-justified font-largest aligned-line headchar-lower
I-Body	each node as are needed to obtain the 1-best hypoth-	page=3 xpos=5 ypos=7 right-column full-justified aligned-line headchar-lower tailchar-hiphen
I-Body	esis at the root. This new method, called cube grow-	page=3 xpos=5 ypos=7 right-column full-justified aligned-line headchar-lower tailchar-hiphen
I-Body	ing, is a lazy version of cube pruning just as Algo-	page=3 xpos=5 ypos=7 right-column full-justified aligned-line headchar-lower tailchar-hiphen
I-Body	rithm 3 of Huang and Chiang (2005), is a lazy ver-	page=3 xpos=5 ypos=8 right-column full-justified aligned-line year headchar-lower tailchar-hiphen
E-Body	sion of Algorithm 2 (see Table 1).	page=3 xpos=5 ypos=8 right-column right-indent aligned-line shorter-tail headchar-lower tailchar-period
B-Body	Instead of traversing the forest bottom-up, cube	page=3 xpos=5 ypos=8 right-column left-indent indented-line longer-tail headchar-capital
I-Body	growing visits nodes recursively in depth-first or-	page=3 xpos=5 ypos=8 right-column full-justified hanged-line headchar-lower tailchar-hiphen
I-Body	der from the root node (Figure 4). First we call	page=3 xpos=5 ypos=9 right-column full-justified aligned-line headchar-lower
I-Body	L AZY J TH B EST (TOP, 1), which uses the same al-	page=3 xpos=5 ypos=9 right-column full-justified font-largest aligned-line headchar-capital tailchar-hiphen
I-Body	gorithm as cube pruning to find the 1-best +LM	page=3 xpos=5 ypos=9 right-column full-justified font-largest aligned-line headchar-lower
I-Body	item of the root node using the best +LM items of	page=3 xpos=5 ypos=9 right-column full-justified font-largest aligned-line headchar-lower page-bottom
B-Figure	1.0 4.0 7.0 1.0 4.0 7.0	page=4 xpos=1 ypos=0 left-column left-indent right-indent font-smallest page-top numbered-heading2 above-double-space above-line-space
I-Figure	1.0 2.1 5.1 8.1 2.5 8.3	page=4 xpos=0 ypos=0 left-column left-indent right-indent font-smallest hanged-line shorter-tail line-double-space line-space numbered-heading2 above-double-space above-line-space
I-Figure	1.1 2.2 5.2 8.2 2.4	page=4 xpos=0 ypos=0 left-column left-indent right-indent font-smallest aligned-line shorter-tail line-double-space line-space numbered-heading2 above-double-space above-line-space
I-Figure	3.5 4.6 7.6 10.6	page=4 xpos=0 ypos=0 left-column left-indent right-indent font-smallest aligned-line shorter-tail line-double-space line-space numbered-heading2 above-double-space above-line-space
E-Figure	(a) h-values (b) true costs	page=4 xpos=1 ypos=0 left-column left-indent right-indent font-larger indented-line longer-tail line-double-space line-space itemization above-blank-line above-double-space above-line-space
B-Caption	Figure 3: Example of cube growing along one hyper-	page=4 xpos=0 ypos=1 left-column full-justified hanged-line longer-tail line-blank-line line-double-space line-space string-figure headchar-capital tailchar-hiphen
I-Caption	edge. (a): the h(x) scores for the grid in Figure 1(a),	page=4 xpos=0 ypos=1 left-column full-justified font-larger aligned-line headchar-lower tailchar-comma
I-Caption	assuming h combo (e) = 0.1 for this hyperedge; (b)	page=4 xpos=0 ypos=1 left-column full-justified font-largest aligned-line headchar-lower
I-Caption	cube growing prevents early ranking of the top-left	page=4 xpos=0 ypos=2 left-column full-justified aligned-line headchar-lower
E-Caption	cell (2.5) as the best item in this grid.	page=4 xpos=0 ypos=2 left-column right-indent aligned-line shorter-tail headchar-lower tailchar-period above-blank-line above-double-space above-line-space
I-Body	the antecedent nodes. However, in this case the best	page=4 xpos=0 ypos=2 left-column full-justified aligned-line longer-tail line-blank-line line-double-space line-space headchar-lower
I-Body	+LM items of the antecedent nodes are not known,	page=4 xpos=0 ypos=2 left-column full-justified font-largest aligned-line tailchar-comma
I-Body	because we have not visited them yet. So we re-	page=4 xpos=0 ypos=3 left-column full-justified aligned-line headchar-lower tailchar-hiphen
I-Body	cursively invoke L AZY J TH B EST on the antecedent	page=4 xpos=0 ypos=3 left-column full-justified aligned-line headchar-lower
I-Body	nodes to obtain them as needed. Each invocation of	page=4 xpos=0 ypos=3 left-column full-justified aligned-line headchar-lower
I-Body	L AZY J TH B EST (v, j) will recursively call itself on	page=4 xpos=0 ypos=3 left-column full-justified font-largest aligned-line headchar-capital
I-Body	the antecedents of v until it is confident that the jth	page=4 xpos=0 ypos=3 left-column full-justified font-larger aligned-line headchar-lower
E-Body	best +LM item for node v has been found.	page=4 xpos=0 ypos=4 left-column right-indent font-largest aligned-line shorter-tail headchar-lower tailchar-period
B-Body	Consider again the case of one hyperedge e. Be-	page=4 xpos=0 ypos=4 left-column left-indent font-larger indented-line longer-tail headchar-capital tailchar-hiphen
I-Body	cause of the nonmonotonicity caused by combina-	page=4 xpos=0 ypos=4 left-column full-justified hanged-line headchar-lower tailchar-hiphen
I-Body	tion costs, the first +LM item (he, 1i) popped from	page=4 xpos=0 ypos=4 left-column full-justified font-largest aligned-line headchar-lower
I-Body	cand is not guaranteed to be the best of all combina-	page=4 xpos=0 ypos=4 left-column full-justified aligned-line headchar-lower tailchar-hiphen
I-Body	tions along this hyperedge (for example, the top-left	page=4 xpos=0 ypos=5 left-column full-justified aligned-line headchar-lower
I-Body	cell of 2.5 in Figure 1 is not the best in the grid). So	page=4 xpos=0 ypos=5 left-column full-justified aligned-line headchar-lower
I-Body	we cannot simply enumerate items just as they come	page=4 xpos=0 ypos=5 left-column full-justified aligned-line headchar-lower
I-Body	off of cand . <sup>2</sup> Instead, we need to store up popped	page=4 xpos=0 ypos=5 left-column full-justified font-largest aligned-line headchar-lower
I-Body	items in a buffer buf , just as in cube pruning, and	page=4 xpos=0 ypos=6 left-column full-justified aligned-line headchar-lower
I-Body	enumerate an item only when we are confident that it	page=4 xpos=0 ypos=6 left-column full-justified aligned-line headchar-lower
I-Body	will never be surpassed in the future. In other words,	page=4 xpos=0 ypos=6 left-column full-justified aligned-line headchar-lower tailchar-comma
I-Body	we would like to have an estimate of the best item	page=4 xpos=0 ypos=6 left-column full-justified aligned-line headchar-lower
I-Body	not explored yet (analogous to the heuristic func-	page=4 xpos=0 ypos=6 left-column full-justified aligned-line headchar-lower tailchar-hiphen
I-Body	tion in A* search). If we can establish a lower bound	page=4 xpos=0 ypos=7 left-column full-justified aligned-line headchar-lower
I-Body	h combo (e) on the combination cost of any +LM de-	page=4 xpos=0 ypos=7 left-column full-justified font-largest aligned-line itemization headchar-lower tailchar-hiphen
I-Body	duction via hyperedge e, then we can form a mono-	page=4 xpos=0 ypos=7 left-column full-justified font-larger aligned-line headchar-lower tailchar-hiphen
I-Body	tonic grid (see Figure 3(a)) of lower bounds on the	page=4 xpos=0 ypos=7 left-column full-justified aligned-line headchar-lower
I-Body	grid of combinations, by using h combo (e) in place of	page=4 xpos=0 ypos=7 left-column full-justified font-largest aligned-line headchar-lower
I-Body	the true combination cost for each +LM item x in	page=4 xpos=0 ypos=8 left-column full-justified font-largest aligned-line headchar-lower
E-Body	the grid; call this lower bound h(x).	page=4 xpos=0 ypos=8 left-column right-indent font-larger aligned-line shorter-tail headchar-lower tailchar-period
B-Body	Now suppose that the gray-shaded cells in Fig-	page=4 xpos=0 ypos=8 left-column left-indent indented-line longer-tail headchar-capital tailchar-hiphen
I-Body	ure 3(a) are the members of cand . Then the min-	page=4 xpos=0 ypos=8 left-column full-justified hanged-line headchar-lower tailchar-hiphen
I-Body	imum of h(x) over the items in cand , in this ex-	page=4 xpos=0 ypos=8 left-column full-justified font-larger aligned-line headchar-lower tailchar-hiphen above-double-space above-line-space
B-Footnote	<sup>2</sup> If we did, then the out-of-order enumeration of +LM items	page=4 xpos=0 ypos=9 left-column left-indent font-larger indented-line line-double-space line-space headchar-super
I-Footnote	at an antecedent node would cause an entire row or column in	page=4 xpos=0 ypos=9 left-column full-justified font-smallest hanged-line headchar-lower
I-Footnote	the grid to be disordered at the consequent node, potentially	page=4 xpos=0 ypos=9 left-column full-justified font-smallest aligned-line headchar-lower
I-Footnote	leading to a multiplication of search errors.	page=4 xpos=0 ypos=9 left-column right-indent font-smallest aligned-line shorter-tail headchar-lower tailchar-period above-line-space
Page	148	page=4 xpos=4 ypos=9 left-column left-indent right-over indented-line longer-tail line-space numeric-only column-bottom
B-Figure	1: procedure L AZY J TH B EST (v, j)	page=4 xpos=5 ypos=0 right-column left-indent right-indent font-smallest column-top
I-Figure	2: if cand [v] is undefined then	page=4 xpos=5 ypos=0 right-column left-indent right-indent font-smallest aligned-line
I-Figure	3: cand [v] ← ∅	page=4 xpos=5 ypos=0 right-column left-indent right-indent font-smaller aligned-line shorter-tail
I-Figure	4: F IRE (e, 1, cand ) foreach e ∈ IN (v)	page=4 xpos=5 ypos=0 right-column left-indent right-indent font-smaller aligned-line longer-tail
I-Figure	5: buf [v] ← ∅	page=4 xpos=5 ypos=0 right-column left-indent right-indent font-smaller aligned-line shorter-tail
I-Figure	6: while |D(v)| < j and |buf [v]| + |D(v)| < k and	page=4 xpos=5 ypos=0 right-column left-indent font-smaller aligned-line longer-tail
I-Figure	|cand [v]| > 0 do	page=4 xpos=5 ypos=0 right-column left-indent right-indent font-smaller indented-line shorter-tail
I-Figure	7: item ← P OP -M IN (cand [v])	page=4 xpos=5 ypos=1 right-column left-indent right-indent font-smaller hanged-line longer-tail
I-Figure	8: P USH (item, buf [v])	page=4 xpos=5 ypos=1 right-column left-indent right-indent font-smallest aligned-line shorter-tail
I-Figure	9: P USH S UCC (item, cand [v])	page=4 xpos=5 ypos=1 right-column left-indent right-indent font-smallest aligned-line longer-tail
I-Figure	10: bound ← min{h(x) | x ∈ cand [v]}	page=4 xpos=5 ypos=1 right-column right-indent font-smaller hanged-line longer-tail
I-Figure	11: E NUM (buf [v], D(v), bound )	page=4 xpos=5 ypos=1 right-column right-indent font-smallest aligned-line shorter-tail
I-Figure	12: E NUM (buf [v], D(v), +∞)	page=4 xpos=5 ypos=1 right-column right-indent font-smallest aligned-line shorter-tail
I-Figure	13: procedure F IRE (e, j, cand )	page=4 xpos=5 ypos=2 right-column right-indent font-smallest aligned-line shorter-tail
I-Figure	14: e is v → u <sub>1</sub> . . . u |e|	page=4 xpos=5 ypos=2 right-column right-indent aligned-line shorter-tail
I-Figure	15: for i in 1 . . . |e| do	page=4 xpos=5 ypos=2 right-column right-indent font-smaller aligned-line
I-Figure	16: L AZY J TH B EST (u i , j i )	page=4 xpos=5 ypos=2 right-column right-indent font-smallest aligned-line longer-tail
I-Figure	17: if |D(u i )| < j i then return	page=4 xpos=5 ypos=2 right-column right-indent font-smaller aligned-line longer-tail
I-Figure	18: P USH (he, ji, cand )	page=4 xpos=5 ypos=2 right-column right-indent font-smallest aligned-line shorter-tail
I-Figure	19: procedure P USH S UCC (he, ji, cand )	page=4 xpos=5 ypos=3 right-column right-indent font-smallest aligned-line longer-tail
I-Figure	20: F IRE (e, j + b <sup>i</sup> , cand ) foreach i in 1 . . . |e|	page=4 xpos=5 ypos=3 right-column right-indent aligned-line longer-tail
I-Figure	21: procedure E NUM (buf , D, bound )	page=4 xpos=5 ypos=3 right-column right-indent font-smallest aligned-line shorter-tail
I-Figure	22: while |buf | > 0 and M IN (buf ) < bound do	page=4 xpos=5 ypos=3 right-column right-indent font-smaller aligned-line longer-tail
E-Figure	23: append P OP -M IN (buf ) to D	page=4 xpos=5 ypos=3 right-column right-indent font-smallest aligned-line shorter-tail above-blank-line above-double-space above-line-space
B-Caption	Figure 4: Pseudocode of cube growing.	page=4 xpos=5 ypos=4 right-column centered left-indent right-indent indented-line longer-tail line-blank-line line-double-space line-space string-figure headchar-capital tailchar-period above-blank-line above-double-space above-line-space
I-Body	ample, min{2.2, 5.1} = 2.2 is a lower bound on	page=4 xpos=5 ypos=4 right-column full-justified font-largest hanged-line longer-tail line-blank-line line-double-space line-space headchar-lower
I-Body	the cost of any item in the future for the hyperedge	page=4 xpos=5 ypos=4 right-column full-justified aligned-line headchar-lower
I-Body	e. Indeed, if cand contains items from multiple hy-	page=4 xpos=5 ypos=4 right-column full-justified font-larger aligned-line headchar-lower tailchar-hiphen
I-Body	peredges for a single consequent node, this is still a	page=4 xpos=5 ypos=5 right-column full-justified aligned-line headchar-lower
I-Body	valid lower bound. More formally:	page=4 xpos=5 ypos=5 right-column right-indent aligned-line shorter-tail headchar-lower tailchar-colon above-double-space above-line-space
B-Lemma	Lemma 1. For each node v in the forest, the term	page=4 xpos=5 ypos=5 right-column right-indent font-larger aligned-line longer-tail line-double-space line-space headchar-capital above-double-space above-line-space
B-Equation	bound = min h(x) (3)	page=4 xpos=6 ypos=6 right-column left-indent font-largest indented-line longer-tail line-double-space line-space headchar-lower
I-Equation	x∈cand[v]	page=4 xpos=7 ypos=6 right-column left-indent right-indent font-smallest indented-line shorter-tail headchar-lower above-double-space above-line-space
I-Lemma	is a lower bound on the true cost of any future item	page=4 xpos=5 ypos=6 right-column full-justified hanged-line longer-tail line-double-space line-space headchar-lower
I-Lemma	that is yet to be explored for v.	page=4 xpos=5 ypos=6 right-column right-indent font-larger aligned-line shorter-tail headchar-lower tailchar-period above-double-space above-line-space
B-Body	Proof. For any item x that is not explored yet, the	page=4 xpos=5 ypos=7 right-column full-justified font-larger aligned-line longer-tail line-double-space line-space headchar-capital
I-Body	true cost c(x) ≥ h(x), by the definition of h. And	page=4 xpos=5 ypos=7 right-column full-justified font-largest aligned-line headchar-lower
I-Body	there exists an item y ∈ cand[v] along the same hy-	page=4 xpos=5 ypos=7 right-column full-justified font-largest aligned-line headchar-lower tailchar-hiphen
I-Body	peredge such that h(x) ≥ h(y), due to the mono-	page=4 xpos=5 ypos=7 right-column full-justified font-largest aligned-line headchar-lower tailchar-hiphen
I-Body	tonicity of h within the grid along one hyperedge.	page=4 xpos=5 ypos=7 right-column full-justified font-larger aligned-line headchar-lower tailchar-period
I-Body	We also have h(y) ≥ bound by the definition of	page=4 xpos=5 ypos=8 right-column full-justified font-largest aligned-line headchar-capital
E-Body	bound. Therefore c(x) ≥ bound .	page=4 xpos=5 ypos=8 right-column right-indent font-largest aligned-line shorter-tail headchar-lower tailchar-period above-double-space above-line-space
B-Body	Now we can safely pop the best item from buf if	page=4 xpos=5 ypos=8 right-column left-indent indented-line longer-tail line-double-space line-space headchar-capital
I-Body	its true cost M IN (buf ) is better than bound and pass	page=4 xpos=5 ypos=8 right-column full-justified font-largest hanged-line headchar-lower
I-Body	it up to the consequent node (lines 21–23); but other-	page=4 xpos=5 ypos=9 right-column full-justified aligned-line headchar-lower tailchar-hiphen
I-Body	wise, we have to wait for more items to accumulate	page=4 xpos=5 ypos=9 right-column full-justified aligned-line headchar-lower
I-Body	in buf to prevent a potential search error, for exam-	page=4 xpos=5 ypos=9 right-column full-justified aligned-line headchar-lower tailchar-hiphen
I-Body	ple, in the case of Figure 3(b), where the top-left cell	page=4 xpos=5 ypos=9 right-column full-justified aligned-line headchar-lower page-bottom
B-Figure	(a)	page=5 xpos=0 ypos=0 left-column right-indent page-top above-blank-line above-double-space above-line-space
I-Figure	1 2 3 4 5	page=5 xpos=0 ypos=0 left-column left-indent right-indent font-smallest indented-line longer-tail line-blank-line line-double-space line-space numbered-heading1 above-blank-line above-double-space above-line-space
I-Figure	(b)	page=5 xpos=0 ypos=1 left-column right-indent hanged-line shorter-tail line-blank-line line-double-space line-space above-blank-line above-double-space above-line-space
E-Figure	1 2 3 4 5	page=5 xpos=0 ypos=1 left-column left-indent right-indent font-smallest indented-line longer-tail line-blank-line line-double-space line-space numbered-heading1 above-double-space above-line-space
B-Caption	Figure 5: (a) Pharaoh expands the hypotheses in the	page=5 xpos=0 ypos=2 left-column full-justified hanged-line longer-tail line-double-space line-space string-figure headchar-capital
I-Caption	current bin (#2) into longer ones. (b) In Cubit, hy-	page=5 xpos=0 ypos=2 left-column full-justified aligned-line headchar-lower tailchar-hiphen
I-Caption	potheses in previous bins are fed via hyperedge bun-	page=5 xpos=0 ypos=2 left-column full-justified aligned-line headchar-lower tailchar-hiphen
I-Caption	dles (solid arrows) into a priority queue (shaded tri-	page=5 xpos=0 ypos=3 left-column full-justified aligned-line headchar-lower tailchar-hiphen
E-Caption	angle), which empties into the current bin (#5).	page=5 xpos=0 ypos=3 left-column right-indent aligned-line shorter-tail headchar-lower tailchar-period above-blank-line above-double-space above-line-space
I-Body	(2.5) is worse than the current bound of 2.2. The up-	page=5 xpos=0 ypos=3 left-column full-justified aligned-line longer-tail line-blank-line line-double-space line-space tailchar-hiphen
I-Body	date of bound in each iteration (line 10) can be effi-	page=5 xpos=0 ypos=4 left-column full-justified aligned-line headchar-lower tailchar-hiphen
I-Body	ciently implemented by using another heap with the	page=5 xpos=0 ypos=4 left-column full-justified aligned-line headchar-lower
I-Body	same contents as cand but prioritized by h instead.	page=5 xpos=0 ypos=4 left-column full-justified font-larger aligned-line headchar-lower tailchar-period
I-Body	In practice this is a negligible overhead on top of	page=5 xpos=0 ypos=4 left-column full-justified aligned-line headchar-capital
E-Body	cube pruning.	page=5 xpos=0 ypos=4 left-column right-indent aligned-line shorter-tail headchar-lower tailchar-period above-double-space above-line-space
B-Body	We now turn to the problem of estimating the	page=5 xpos=0 ypos=5 left-column left-indent indented-line longer-tail line-double-space line-space headchar-capital
I-Body	heuristic function h combo . In practice, computing	page=5 xpos=0 ypos=5 left-column full-justified font-larger hanged-line headchar-lower
I-Body	true lower bounds of the combination costs is too	page=5 xpos=0 ypos=5 left-column full-justified aligned-line headchar-lower
I-Body	slow and would compromise the speed up gained	page=5 xpos=0 ypos=5 left-column full-justified aligned-line headchar-lower
I-Body	from cube growing. So we instead use a much sim-	page=5 xpos=0 ypos=6 left-column full-justified aligned-line headchar-lower tailchar-hiphen
I-Body	pler method that just calculates the minimum com-	page=5 xpos=0 ypos=6 left-column full-justified aligned-line headchar-lower tailchar-hiphen
I-Body	bination cost of each hyperedge in the top-i deriva-	page=5 xpos=0 ypos=6 left-column full-justified aligned-line headchar-lower tailchar-hiphen
I-Body	tions of the root node in −LM decoding. This is	page=5 xpos=0 ypos=6 left-column full-justified font-largest aligned-line headchar-lower
I-Body	just an approximation of the true lower bound, and	page=5 xpos=0 ypos=6 left-column full-justified aligned-line headchar-lower
I-Body	bad estimates can lead to search errors. However, the	page=5 xpos=0 ypos=7 left-column full-justified aligned-line headchar-lower
I-Body	hope is that by choosing the right value of i, these es-	page=5 xpos=0 ypos=7 left-column full-justified font-larger aligned-line headchar-lower tailchar-hiphen
I-Body	timates will be accurate enough to affect the search	page=5 xpos=0 ypos=7 left-column full-justified aligned-line headchar-lower
I-Body	quality only slightly, which is analogous to “almost	page=5 xpos=0 ypos=7 left-column full-justified aligned-line headchar-lower
E-Body	admissible” heuristics in A* search (Soricut, 2006).	page=5 xpos=0 ypos=8 left-column centered right-indent aligned-line year headchar-lower tailchar-period above-blank-line above-double-space above-line-space
B-SectionHeader	5 Experiments	page=5 xpos=0 ypos=8 left-column right-indent font-larger aligned-line shorter-tail line-blank-line line-double-space line-space numbered-heading1 above-blank-line above-double-space above-line-space
B-Body	We test our methods on two large-scale English-to-	page=5 xpos=0 ypos=9 left-column full-justified aligned-line longer-tail line-blank-line line-double-space line-space headchar-capital tailchar-hiphen
I-Body	Chinese translation systems: a phrase-based system	page=5 xpos=0 ypos=9 left-column full-justified aligned-line headchar-capital
E-Body	and our tree-to-string system (Huang et al., 2006).	page=5 xpos=0 ypos=9 left-column right-indent aligned-line shorter-tail year headchar-lower tailchar-period above-line-space
Page	149	page=5 xpos=4 ypos=9 left-column left-indent right-over indented-line longer-tail line-space numeric-only column-bottom
Figure	__Figure 6__	page=5 xpos=5 ypos=-1 right-column right-indent box column-top figure-area above-double-space above-line-space
B-Caption	Figure 6: A hyperedge bundle represents all +LM	page=5 xpos=5 ypos=1 right-column full-justified font-largest longer-tail line-double-space line-space string-figure headchar-capital
I-Caption	deductions that derives an item in the current bin	page=5 xpos=5 ypos=1 right-column full-justified aligned-line headchar-lower
I-Caption	from the same coverage vector (see Figure 5). The	page=5 xpos=5 ypos=1 right-column full-justified aligned-line headchar-lower
I-Caption	phrases on the top denote the target-sides of appli-	page=5 xpos=5 ypos=1 right-column full-justified aligned-line headchar-lower tailchar-hiphen
E-Caption	cable phrase-pairs sharing the same source-side.	page=5 xpos=5 ypos=2 right-column right-indent aligned-line shorter-tail headchar-lower tailchar-period above-blank-line above-double-space above-line-space
B-SubsectionHeader	5.1 Phrase-based Decoding	page=5 xpos=5 ypos=2 right-column right-indent aligned-line shorter-tail line-blank-line line-double-space line-space numbered-heading2 above-double-space above-line-space
B-Body	We implemented Cubit, a Python clone of the	page=5 xpos=5 ypos=3 right-column full-justified aligned-line longer-tail line-double-space line-space headchar-capital
I-Body	Pharaoh decoder (Koehn, 2004), <sup>3</sup> and adapted cube	page=5 xpos=5 ypos=3 right-column full-justified font-largest aligned-line year headchar-capital
I-Body	pruning to it as follows. As in Pharaoh, each bin	page=5 xpos=5 ypos=3 right-column full-justified aligned-line headchar-lower
I-Body	i contains hypotheses (i.e., +LM items) covering i	page=5 xpos=5 ypos=3 right-column full-justified font-largest aligned-line itemization headchar-lower
I-Body	words on the source-side. But at each bin (see Fig-	page=5 xpos=5 ypos=3 right-column full-justified aligned-line headchar-lower tailchar-hiphen
I-Body	ure 5), all +LM items from previous bins are first	page=5 xpos=5 ypos=4 right-column full-justified font-largest aligned-line headchar-lower
I-Body	partitioned into −LM items; then the hyperedges	page=5 xpos=5 ypos=4 right-column full-justified font-largest aligned-line headchar-lower
I-Body	leading from those −LM items are further grouped	page=5 xpos=5 ypos=4 right-column full-justified font-largest aligned-line headchar-lower
I-Body	into hyperedge bundles (Figure 6), which are placed	page=5 xpos=5 ypos=4 right-column full-justified aligned-line headchar-lower
E-Body	into the priority queue of the current bin.	page=5 xpos=5 ypos=4 right-column right-indent aligned-line shorter-tail headchar-lower tailchar-period above-line-space
B-Body	Our data preparation follows Huang et al. (2006):	page=5 xpos=5 ypos=5 right-column left-indent indented-line longer-tail line-space year headchar-capital tailchar-colon
I-Body	the training data is a parallel corpus of 28.3M words	page=5 xpos=5 ypos=5 right-column full-justified hanged-line headchar-lower
I-Body	on the English side, and a trigram language model is	page=5 xpos=5 ypos=5 right-column full-justified aligned-line headchar-lower
I-Body	trained on the Chinese side. We use the same test set	page=5 xpos=5 ypos=5 right-column full-justified aligned-line headchar-lower
I-Body	as (Huang et al., 2006), which is a 140-sentence sub-	page=5 xpos=5 ypos=6 right-column full-justified aligned-line year headchar-lower tailchar-hiphen
I-Body	set of the NIST 2003 test set with 9–36 words on the	page=5 xpos=5 ypos=6 right-column full-justified aligned-line year headchar-lower
I-Body	English side. The weights for the log-linear model	page=5 xpos=5 ypos=6 right-column full-justified aligned-line headchar-capital
I-Body	are tuned on a separate development set. We set the	page=5 xpos=5 ypos=6 right-column full-justified aligned-line headchar-lower
I-Body	decoder phrase-table limit to 100 as suggested in	page=5 xpos=5 ypos=6 right-column full-justified aligned-line headchar-lower
E-Body	(Koehn, 2004) and the distortion limit to 4.	page=5 xpos=5 ypos=7 right-column right-indent aligned-line shorter-tail year tailchar-period above-line-space
B-Body	Figure 7(a) compares cube pruning against full-	page=5 xpos=5 ypos=7 right-column left-indent indented-line longer-tail line-space string-figure headchar-capital tailchar-hiphen
I-Body	integration in terms of search quality vs. search ef-	page=5 xpos=5 ypos=7 right-column full-justified hanged-line headchar-lower tailchar-hiphen
I-Body	ficiency, under various pruning settings (threshold	page=5 xpos=5 ypos=7 right-column full-justified aligned-line headchar-lower
I-Body	beam set to 0.0001, stack size varying from 1 to	page=5 xpos=5 ypos=8 right-column full-justified aligned-line headchar-lower
I-Body	200). Search quality is measured by average model	page=5 xpos=5 ypos=8 right-column full-justified aligned-line
I-Body	cost per sentence (lower is better), and search effi-	page=5 xpos=5 ypos=8 right-column full-justified aligned-line headchar-lower tailchar-hiphen
I-Body	ciency is measured by the average number of hy-	page=5 xpos=5 ypos=8 right-column full-justified aligned-line headchar-lower tailchar-hiphen
I-Body	potheses generated (smaller is faster). At each level	page=5 xpos=5 ypos=8 right-column full-justified aligned-line headchar-lower above-double-space above-line-space
B-Footnote	<sup>3</sup> In our tests, Cubit always obtains a BLEU score within	page=5 xpos=5 ypos=9 right-column left-indent indented-line line-double-space line-space headchar-super
I-Footnote	0.004 of Pharaoh’s (Figure 7(b)). Source code available at	page=5 xpos=5 ypos=9 right-column right-indent font-smallest hanged-line shorter-tail numbered-heading2
I-Footnote	http://www.cis.upenn.edu/˜lhuang3/cubit/	page=5 xpos=5 ypos=9 right-column right-indent font-smallest aligned-line longer-tail headchar-lower page-bottom
Figure	__Figure 7__	page=6 xpos=0 ypos=-4 single-column left-indent right-indent box page-top figure-area above-double-space above-line-space
B-Caption	Figure 7: Cube pruning vs. full-integration (with beam search) on phrase-based decoding.	page=6 xpos=0 ypos=0 single-column centered left-indent right-indent indented-line shorter-tail line-double-space line-space string-figure headchar-capital tailchar-period column-bottom above-blank-line above-double-space above-line-space
I-Body	of search quality, the speed-up is always better than	page=6 xpos=0 ypos=0 left-column full-justified column-top line-blank-line line-double-space line-space headchar-lower
I-Body	a factor of 10. The speed-up at the lowest search-	page=6 xpos=0 ypos=0 left-column full-justified aligned-line itemization headchar-lower tailchar-hiphen
I-Body	error level is a factor of 32. Figure 7(b) makes a	page=6 xpos=0 ypos=1 left-column full-justified aligned-line headchar-lower
I-Body	similar comparison but measures search quality by	page=6 xpos=0 ypos=1 left-column full-justified aligned-line headchar-lower
I-Body	BLEU, which shows an even larger relative speed-up	page=6 xpos=0 ypos=1 left-column full-justified aligned-line headchar-capital
I-Body	for a given BLEU score, because translations with	page=6 xpos=0 ypos=2 left-column full-justified aligned-line headchar-lower
I-Body	very different model costs might have similar BLEU	page=6 xpos=0 ypos=2 left-column full-justified aligned-line headchar-lower
I-Body	scores. It also shows that our full-integration imple-	page=6 xpos=0 ypos=2 left-column full-justified aligned-line headchar-lower tailchar-hiphen
I-Body	mentation in Cubit faithfully reproduces Pharaoh’s	page=6 xpos=0 ypos=2 left-column full-justified aligned-line headchar-lower
I-Body	performance. Fixing the stack size to 100 and vary-	page=6 xpos=0 ypos=3 left-column full-justified aligned-line headchar-lower tailchar-hiphen
E-Body	ing the threshold yielded a similar result.	page=6 xpos=0 ypos=3 left-column right-indent aligned-line shorter-tail headchar-lower tailchar-period above-double-space above-line-space
B-SubsectionHeader	5.2 Tree-to-string Decoding	page=6 xpos=0 ypos=3 left-column right-indent aligned-line shorter-tail line-double-space line-space numbered-heading2 above-double-space above-line-space
B-Body	In tree-to-string (also called syntax-directed) decod-	page=6 xpos=0 ypos=4 left-column full-justified aligned-line longer-tail line-double-space line-space headchar-capital tailchar-hiphen
I-Body	ing (Huang et al., 2006; Liu et al., 2006), the source	page=6 xpos=0 ypos=4 left-column full-justified aligned-line year headchar-lower
I-Body	string is first parsed into a tree, which is then re-	page=6 xpos=0 ypos=4 left-column full-justified aligned-line headchar-lower tailchar-hiphen
I-Body	cursively converted into a target string according to	page=6 xpos=0 ypos=5 left-column full-justified aligned-line headchar-lower
I-Body	transfer rules in a synchronous grammar (Galley et	page=6 xpos=0 ypos=5 left-column full-justified aligned-line headchar-lower
I-Body	al., 2006). For instance, the following rule translates	page=6 xpos=0 ypos=5 left-column full-justified aligned-line year headchar-lower
I-Body	an English passive construction into Chinese:	page=6 xpos=0 ypos=6 left-column right-indent aligned-line shorter-tail headchar-lower tailchar-colon above-double-space above-line-space
B-Figure	VP	page=6 xpos=1 ypos=6 left-column left-indent right-indent font-smaller indented-line shorter-tail line-double-space line-space headchar-capital above-double-space above-line-space
I-Figure	VBD VP-C	page=6 xpos=0 ypos=6 left-column left-indent right-indent font-smaller hanged-line longer-tail line-double-space line-space headchar-capital
I-Figure	→ bèi x <sub>2</sub> x 1	page=6 xpos=3 ypos=6 left-column left-indent right-indent font-largest indented-line longer-tail above-double-space above-line-space
I-Figure	was x 1 :VBN PP	page=6 xpos=0 ypos=7 left-column left-indent right-indent font-largest hanged-line shorter-tail line-double-space line-space headchar-lower above-double-space above-line-space
I-Figure	IN x 2 :NP-C	page=6 xpos=1 ypos=7 left-column left-indent right-indent font-largest indented-line longer-tail line-double-space line-space headchar-capital above-double-space above-line-space
E-Figure	by	page=6 xpos=1 ypos=8 left-column left-indent right-indent font-smaller aligned-line shorter-tail line-double-space line-space headchar-lower above-line-space
B-Body	Our tree-to-string system performs slightly bet-	page=6 xpos=0 ypos=8 left-column full-justified hanged-line longer-tail line-space headchar-capital tailchar-hiphen
I-Body	ter than the state-of-the-art phrase-based system	page=6 xpos=0 ypos=8 left-column full-justified aligned-line headchar-lower
I-Body	Pharaoh on the above data set. Although differ-	page=6 xpos=0 ypos=9 left-column full-justified aligned-line headchar-capital tailchar-hiphen
I-Body	ent from the SCFG-based systems in Section 2, its	page=6 xpos=0 ypos=9 left-column full-justified aligned-line headchar-lower above-line-space
Page	150	page=6 xpos=4 ypos=9 left-column left-indent right-over indented-line longer-tail line-space numeric-only column-bottom
I-Body	derivation trees remain context-free and the search	page=6 xpos=5 ypos=0 right-column full-justified column-top headchar-lower
I-Body	space is still a hypergraph, where we can adapt the	page=6 xpos=5 ypos=0 right-column full-justified aligned-line headchar-lower
E-Body	methods presented in Sections 3 and 4.	page=6 xpos=5 ypos=1 right-column right-indent aligned-line shorter-tail headchar-lower tailchar-period
B-Body	The data set is same as in Section 5.1, except that	page=6 xpos=5 ypos=1 right-column left-indent indented-line longer-tail headchar-capital
I-Body	we also parsed the English-side using a variant of	page=6 xpos=5 ypos=1 right-column full-justified hanged-line headchar-lower
I-Body	the Collins (1997) parser, and then extracted 24.7M	page=6 xpos=5 ypos=2 right-column full-justified aligned-line year headchar-lower
I-Body	tree-to-string rules using the algorithm of (Galley et	page=6 xpos=5 ypos=2 right-column full-justified aligned-line headchar-lower
I-Body	al., 2006). Since our tree-to-string rules may have	page=6 xpos=5 ypos=2 right-column full-justified aligned-line year headchar-lower
I-Body	many variables, we first binarize each hyperedge in	page=6 xpos=5 ypos=2 right-column full-justified aligned-line headchar-lower
I-Body	the forest on the target projection (Huang, 2007).	page=6 xpos=5 ypos=3 right-column full-justified aligned-line year headchar-lower tailchar-period
I-Body	All the three +LM decoding methods to be com-	page=6 xpos=5 ypos=3 right-column full-justified font-largest aligned-line headchar-capital tailchar-hiphen
I-Body	pared below take these binarized forests as input. For	page=6 xpos=5 ypos=3 right-column full-justified aligned-line headchar-lower
I-Body	cube growing, we use a non-duplicate k-best method	page=6 xpos=5 ypos=4 right-column full-justified font-larger aligned-line headchar-lower
I-Body	(Huang et al., 2006) to get 100-best unique transla-	page=6 xpos=5 ypos=4 right-column full-justified aligned-line year tailchar-hiphen
I-Body	tions according to −LM to estimate the lower-bound	page=6 xpos=5 ypos=4 right-column full-justified font-largest aligned-line headchar-lower
I-Body	heuristics. <sup>4</sup> This preprocessing step takes on aver-	page=6 xpos=5 ypos=4 right-column full-justified font-largest aligned-line headchar-lower tailchar-hiphen
I-Body	age 0.12 seconds per sentence, which is negligible	page=6 xpos=5 ypos=5 right-column full-justified aligned-line headchar-lower
E-Body	in comparison to the +LM decoding time.	page=6 xpos=5 ypos=5 right-column right-indent font-largest aligned-line shorter-tail headchar-lower tailchar-period
B-Body	Figure 8(a) compares cube growing and cube	page=6 xpos=5 ypos=5 right-column left-indent indented-line longer-tail string-figure headchar-capital
I-Body	pruning against full-integration under various beam	page=6 xpos=5 ypos=6 right-column full-justified hanged-line headchar-lower
I-Body	settings in the same fashion of Figure 7(a). At the	page=6 xpos=5 ypos=6 right-column full-justified aligned-line headchar-lower
I-Body	lowest level of search error, the relative speed-up	page=6 xpos=5 ypos=6 right-column full-justified aligned-line headchar-lower
I-Body	from cube growing and cube pruning compared with	page=6 xpos=5 ypos=6 right-column full-justified aligned-line headchar-lower
I-Body	full-integration is by a factor of 9.8 and 4.1, respec-	page=6 xpos=5 ypos=7 right-column full-justified aligned-line headchar-lower tailchar-hiphen
I-Body	tively. Figure 8(b) is a similar comparison in terms	page=6 xpos=5 ypos=7 right-column full-justified aligned-line headchar-lower
I-Body	of BLEU scores and shows an even bigger advantage	page=6 xpos=5 ypos=7 right-column full-justified aligned-line headchar-lower
I-Body	of cube growing and cube pruning over the baseline.	page=6 xpos=5 ypos=8 right-column full-justified aligned-line headchar-lower tailchar-period above-double-space above-line-space
B-Footnote	<sup>4</sup> If a hyperedge is not represented at all in the 100-best −LM	page=6 xpos=5 ypos=8 right-column left-indent font-larger indented-line line-double-space line-space headchar-super
I-Footnote	derivations at the root node, we use the 1-best −LM derivation	page=6 xpos=5 ypos=8 right-column full-justified font-smaller hanged-line headchar-lower
I-Footnote	of this hyperedge instead. Here, rules that share the same source	page=6 xpos=5 ypos=8 right-column full-justified font-smallest aligned-line headchar-lower
I-Footnote	side but have different target sides are treated as separate hy-	page=6 xpos=5 ypos=9 right-column full-justified font-smallest aligned-line headchar-lower tailchar-hiphen
I-Footnote	peredges, not collected into hyperedge bundles, since grouping	page=6 xpos=5 ypos=9 right-column full-justified font-smallest aligned-line headchar-lower
I-Footnote	becomes difficult after binarization.	page=6 xpos=5 ypos=9 right-column right-indent font-smallest aligned-line shorter-tail headchar-lower tailchar-period page-bottom
Figure	__Figure 8__	page=7 xpos=0 ypos=-4 single-column left-indent right-over box page-top figure-area above-double-space above-line-space
B-Caption	Figure 8: Cube growing vs. cube pruning vs. full-integration (with beam search) on tree-to-string decoding.	page=7 xpos=0 ypos=0 single-column full-justified hanged-line line-double-space line-space string-figure headchar-capital tailchar-period column-bottom above-blank-line above-double-space above-line-space
B-SectionHeader	6 Conclusions and Future Work	page=7 xpos=0 ypos=0 left-column right-indent font-larger column-top line-blank-line line-double-space line-space numbered-heading1 above-double-space above-line-space
B-Body	We have presented a novel extension of cube prun-	page=7 xpos=0 ypos=1 left-column full-justified aligned-line longer-tail line-double-space line-space headchar-capital tailchar-hiphen
I-Body	ing called cube growing, and shown how both can be	page=7 xpos=0 ypos=1 left-column full-justified aligned-line headchar-lower
I-Body	seen as general forest rescoring techniques applica-	page=7 xpos=0 ypos=1 left-column full-justified aligned-line headchar-lower tailchar-hiphen
I-Body	ble to both phrase-based and syntax-based decoding.	page=7 xpos=0 ypos=1 left-column full-justified aligned-line headchar-lower tailchar-period
I-Body	We evaluated these methods on large-scale transla-	page=7 xpos=0 ypos=2 left-column full-justified aligned-line headchar-capital tailchar-hiphen
I-Body	tion tasks and observed considerable speed improve-	page=7 xpos=0 ypos=2 left-column full-justified aligned-line headchar-lower tailchar-hiphen
I-Body	ments, often by more than a factor of ten. We plan	page=7 xpos=0 ypos=2 left-column full-justified aligned-line headchar-lower
I-Body	to investigate how to adapt cube growing to phrase-	page=7 xpos=0 ypos=3 left-column full-justified aligned-line headchar-lower tailchar-hiphen
E-Body	based and hierarchical phrase-based systems.	page=7 xpos=0 ypos=3 left-column right-indent aligned-line shorter-tail headchar-lower tailchar-period
B-Body	These forest rescoring algorithms have potential	page=7 xpos=0 ypos=3 left-column left-indent indented-line longer-tail headchar-capital
I-Body	applications to other computationally intensive tasks	page=7 xpos=0 ypos=3 left-column full-justified hanged-line headchar-lower
I-Body	involving combinations of different models, for	page=7 xpos=0 ypos=4 left-column full-justified aligned-line headchar-lower
I-Body	example, head-lexicalized parsing (Collins, 1997);	page=7 xpos=0 ypos=4 left-column full-justified aligned-line year headchar-lower tailchar-semicolon
I-Body	joint parsing and semantic role labeling (Sutton and	page=7 xpos=0 ypos=4 left-column full-justified aligned-line headchar-lower
I-Body	McCallum, 2005); or tagging and parsing with non-	page=7 xpos=0 ypos=5 left-column full-justified aligned-line year headchar-capital tailchar-hiphen
I-Body	local features. Thus we envision forest rescoring as	page=7 xpos=0 ypos=5 left-column full-justified aligned-line headchar-lower
I-Body	being of general applicability for reducing compli-	page=7 xpos=0 ypos=5 left-column full-justified aligned-line headchar-lower tailchar-hiphen
I-Body	cated search spaces, as an alternative to simulated	page=7 xpos=0 ypos=5 left-column full-justified aligned-line headchar-lower
E-Body	annealing methods (Kirkpatrick et al., 1983).	page=7 xpos=0 ypos=6 left-column right-indent aligned-line shorter-tail year headchar-lower tailchar-period above-blank-line above-double-space above-line-space
ReferenceHeader	References	page=7 xpos=0 ypos=6 left-column right-indent font-larger aligned-line shorter-tail line-blank-line line-double-space line-space string-reference headchar-capital above-line-space
B-Reference	David Chiang. 2005. A hierarchical phrase-based model for	page=7 xpos=0 ypos=7 left-column full-justified font-smallest aligned-line longer-tail line-space year headchar-capital
I-Reference	statistical machine translation. In Proc. ACL.	page=7 xpos=0 ypos=7 left-column left-indent right-indent font-smallest indented-line shorter-tail headchar-lower tailchar-period above-double-space above-line-space
B-Reference	David Chiang. 2007. Hierarchical phrase-based translation.	page=7 xpos=0 ypos=7 left-column full-justified font-smallest hanged-line longer-tail line-double-space line-space year headchar-capital tailchar-period
I-Reference	Computational Linguistics, 33(2). To appear.	page=7 xpos=0 ypos=7 left-column left-indent right-indent font-smallest indented-line shorter-tail headchar-capital tailchar-period above-double-space above-line-space
B-Reference	Michael Collins. 1997. Three generative lexicalised models for	page=7 xpos=0 ypos=8 left-column full-justified font-smallest hanged-line longer-tail line-double-space line-space year headchar-capital
I-Reference	statistical parsing. In Proc. ACL.	page=7 xpos=0 ypos=8 left-column left-indent right-indent font-smallest indented-line shorter-tail headchar-lower tailchar-period above-double-space above-line-space
B-Reference	M. Galley, J. Graehl, K. Knight, D. Marcu, S. DeNeefe,	page=7 xpos=0 ypos=8 left-column full-justified font-smallest hanged-line longer-tail line-double-space line-space headchar-capital tailchar-comma
I-Reference	W. Wang, and I. Thayer. 2006. Scalable inference and	page=7 xpos=0 ypos=9 left-column left-indent font-smallest indented-line year headchar-capital
I-Reference	training of context-rich syntactic translation models. In	page=7 xpos=0 ypos=9 left-column left-indent font-smallest aligned-line headchar-lower
I-Reference	Proc. COLING-ACL.	page=7 xpos=0 ypos=9 left-column left-indent right-indent font-smallest aligned-line shorter-tail headchar-capital tailchar-period above-line-space
Page	151	page=7 xpos=4 ypos=9 left-column left-indent right-over indented-line longer-tail line-space numeric-only column-bottom
B-Reference	Liang Huang and David Chiang. 2005. Better k-best parsing.	page=7 xpos=5 ypos=0 right-column full-justified font-smallest column-top year headchar-capital tailchar-period
I-Reference	In Proc. IWPT.	page=7 xpos=5 ypos=0 right-column left-indent right-indent font-smallest indented-line shorter-tail headchar-capital tailchar-period above-double-space above-line-space
B-Reference	Liang Huang, Kevin Knight, and Aravind Joshi. 2006. Sta-	page=7 xpos=5 ypos=1 right-column full-justified font-smallest hanged-line longer-tail line-double-space line-space year headchar-capital tailchar-hiphen
I-Reference	tistical syntax-directed translation with extended domain of	page=7 xpos=5 ypos=1 right-column left-indent font-smallest indented-line headchar-lower
I-Reference	locality. In Proc. AMTA.	page=7 xpos=5 ypos=1 right-column left-indent right-indent font-smallest aligned-line shorter-tail headchar-lower tailchar-period above-double-space above-line-space
B-Reference	Liang Huang. 2007. Binarization, synchronous binarization,	page=7 xpos=5 ypos=2 right-column full-justified font-smallest hanged-line longer-tail line-double-space line-space year headchar-capital tailchar-comma
I-Reference	and target-side binarization. In Proc. NAACL Workshop on	page=7 xpos=5 ypos=2 right-column left-indent font-smallest indented-line headchar-lower
I-Reference	Syntax and Structure in Statistical Translation.	page=7 xpos=5 ypos=2 right-column left-indent right-indent font-smallest aligned-line shorter-tail headchar-capital tailchar-period above-double-space above-line-space
B-Reference	S. Kirkpatrick, C. D. Gelatt, and M. P. Vecchi. 1983. Optimiza-	page=7 xpos=5 ypos=2 right-column full-justified font-smallest hanged-line longer-tail line-double-space line-space year headchar-capital tailchar-hiphen
I-Reference	tion by simulated annealing. Science, 220(4598):671–680.	page=7 xpos=5 ypos=3 right-column left-indent right-indent font-smallest indented-line shorter-tail headchar-lower tailchar-period above-double-space above-line-space
B-Reference	Kevin Knight. 1999. Decoding complexity in word-	page=7 xpos=5 ypos=3 right-column full-justified font-smallest hanged-line longer-tail line-double-space line-space year headchar-capital tailchar-hiphen
I-Reference	replacement translation models. Computational Linguistics,	page=7 xpos=5 ypos=3 right-column left-indent font-smallest indented-line headchar-lower tailchar-comma
I-Reference	25(4):607–615.	page=7 xpos=5 ypos=3 right-column left-indent right-indent font-smallest aligned-line shorter-tail tailchar-period above-double-space above-line-space
B-Reference	Philipp Koehn. 2004. Pharaoh: a beam search decoder for	page=7 xpos=5 ypos=4 right-column full-justified font-smallest hanged-line longer-tail line-double-space line-space year headchar-capital
I-Reference	phrase-based statistical machine translation models. In	page=7 xpos=5 ypos=4 right-column left-indent font-smallest indented-line headchar-lower
I-Reference	Proc. AMTA, pages 115–124.	page=7 xpos=5 ypos=4 right-column left-indent right-indent font-smallest aligned-line shorter-tail headchar-capital tailchar-period above-double-space above-line-space
B-Reference	P. M. Lewis and R. E. Stearns. 1968. Syntax-directed transduc-	page=7 xpos=5 ypos=4 right-column full-justified font-smallest hanged-line longer-tail line-double-space line-space year headchar-capital tailchar-hiphen
I-Reference	tion. J. ACM, 15:465–488.	page=7 xpos=5 ypos=5 right-column left-indent right-indent font-smallest indented-line shorter-tail headchar-lower tailchar-period above-double-space above-line-space
B-Reference	Yang Liu, Qun Liu, and Shouxun Lin. 2006. Tree-to-string	page=7 xpos=5 ypos=5 right-column full-justified font-smallest hanged-line longer-tail line-double-space line-space year headchar-capital
I-Reference	alignment template for statistical machine translation. In	page=7 xpos=5 ypos=5 right-column left-indent font-smallest indented-line headchar-lower
I-Reference	Proc. COLING-ACL, pages 609–616.	page=7 xpos=5 ypos=5 right-column left-indent right-indent font-smallest aligned-line shorter-tail headchar-capital tailchar-period above-double-space above-line-space
B-Reference	Franz Joseph Och and Hermann Ney. 2004. The alignment	page=7 xpos=5 ypos=6 right-column full-justified font-smallest hanged-line longer-tail line-double-space line-space year headchar-capital
I-Reference	template approach to statistical machine translation. Com-	page=7 xpos=5 ypos=6 right-column left-indent font-smallest indented-line headchar-lower tailchar-hiphen
I-Reference	putational Linguistics, 30:417–449.	page=7 xpos=5 ypos=6 right-column left-indent right-indent font-smallest aligned-line shorter-tail headchar-lower tailchar-period above-double-space above-line-space
B-Reference	Stuart Shieber, Yves Schabes, and Fernando Pereira. 1995.	page=7 xpos=5 ypos=7 right-column full-justified font-smallest hanged-line longer-tail line-double-space line-space year headchar-capital tailchar-period
I-Reference	Principles and implementation of deductive parsing. J. Logic	page=7 xpos=5 ypos=7 right-column left-indent font-smallest indented-line headchar-capital
I-Reference	Programming, 24:3–36.	page=7 xpos=5 ypos=7 right-column left-indent right-indent font-smallest aligned-line shorter-tail headchar-capital tailchar-period above-double-space above-line-space
B-Reference	Radu Soricut. 2006. Natural Language Generation using an	page=7 xpos=5 ypos=7 right-column full-justified font-smallest hanged-line longer-tail line-double-space line-space year headchar-capital
I-Reference	Information-Slim Representation. Ph.D. thesis, University	page=7 xpos=5 ypos=8 right-column left-indent font-smallest indented-line headchar-capital
I-Reference	of Southern California.	page=7 xpos=5 ypos=8 right-column left-indent right-indent font-smallest aligned-line shorter-tail headchar-lower tailchar-period above-double-space above-line-space
B-Reference	Charles Sutton and Andrew McCallum. 2005. Joint parsing	page=7 xpos=5 ypos=8 right-column full-justified font-smallest hanged-line longer-tail line-double-space line-space year headchar-capital
I-Reference	and semantic role labeling. In Proc. CoNLL 2005.	page=7 xpos=5 ypos=8 right-column left-indent right-indent font-smallest indented-line shorter-tail year headchar-lower tailchar-period above-double-space above-line-space
B-Reference	Dekai Wu. 1996. A polynomial-time algorithm for statistical	page=7 xpos=5 ypos=9 right-column full-justified font-smallest hanged-line longer-tail line-double-space line-space year headchar-capital
I-Reference	machine translation. In Proc. ACL.	page=7 xpos=5 ypos=9 right-column left-indent right-indent font-smallest indented-line shorter-tail headchar-lower tailchar-period
